

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Nov 12 16:24:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _ADRESL	set	4035
    59   000000                     _ADRESH	set	4036
    60                           
    61                           	psect	nvCOMRAM
    62   000010                     __pnvCOMRAM:
    63                           	callstack 0
    64   000010                     _prueba:
    65                           	callstack 0
    66   000010                     	ds	2
    67   000012                     _D4:
    68                           	callstack 0
    69   000012                     	ds	2
    70   000014                     _D3:
    71                           	callstack 0
    72   000014                     	ds	2
    73   000016                     _D2:
    74                           	callstack 0
    75   000016                     	ds	2
    76   000018                     _D1:
    77                           	callstack 0
    78   000018                     	ds	2
    79   000000                     _GO_nDONE	set	32273
    80   000000                     _LATB	set	3978
    81   000000                     _LATD	set	3980
    82   000000                     _TRISB	set	3987
    83   000000                     _OSCCON	set	4051
    84   000000                     _TRISD	set	3989
    85   000000                     _ADCON2	set	4032
    86   000000                     _ADCON1	set	4033
    87   000000                     _ADCON0	set	4034
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   007C2E                     __pcinit:
    93                           	callstack 0
    94   007C2E                     start_initialization:
    95                           	callstack 0
    96   007C2E                     __initialization:
    97                           	callstack 0
    98   007C2E                     end_of_initialization:
    99                           	callstack 0
   100   007C2E                     __end_of__initialization:
   101                           	callstack 0
   102   007C2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   103   007C30  6EF8               	movwf	tblptru,c
   104   007C32  0100               	movlb	0
   105   007C34  EF23  F03E         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	cstackCOMRAM
   108   000001                     __pcstackCOMRAM:
   109                           	callstack 0
   110   000001                     ?_ReadADC:
   111                           	callstack 0
   112   000001                     ?___awdiv:
   113                           	callstack 0
   114   000001                     DISPLAY_7SEG@x:
   115                           	callstack 0
   116   000001                     ___awdiv@dividend:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x0
   120   000001                     	ds	2
   121   000003                     ??_ReadADC:
   122   000003                     ??_DISPLAY_7SEG:
   123   000003                     ___awdiv@divisor:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x2
   127   000003                     	ds	2
   128   000005                     ReadADC@channel:
   129                           	callstack 0
   130   000005                     ___awdiv@counter:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x4
   134   000005                     	ds	1
   135   000006                     ___awdiv@sign:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x5
   139   000006                     	ds	1
   140   000007                     ___awdiv@quotient:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x6
   144   000007                     	ds	2
   145   000009                     ?___awmod:
   146                           	callstack 0
   147   000009                     ___awmod@dividend:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x8
   151   000009                     	ds	2
   152   00000B                     ___awmod@divisor:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0xA
   156   00000B                     	ds	2
   157   00000D                     ___awmod@counter:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0xC
   161   00000D                     	ds	1
   162   00000E                     ___awmod@sign:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0xD
   166   00000E                     	ds	1
   167   00000F                     ??_MOSTRAR_DISPLAY:
   168                           
   169                           ; 1 bytes @ 0xE
   170   00000F                     	ds	1
   171   000010                     
   172                           ; 1 bytes @ 0xF
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 79 in file "main.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   192 ;;      Params:         0       0       0       0       0       0       0       0       0
   193 ;;      Locals:         0       0       0       0       0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0       0       0
   195 ;;      Totals:         0       0       0       0       0       0       0       0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels required when called: 2
   198 ;; This function calls:
   199 ;;		_MOSTRAR_DISPLAY
   200 ;;		_Setup
   201 ;; This function is called by:
   202 ;;		Startup code after reset
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text0
   207   007C46                     __ptext0:
   208                           	callstack 0
   209   007C46                     _main:
   210                           	callstack 29
   211   007C46                     
   212                           ;main.c: 80:     Setup();
   213   007C46  EC2B  F03E         	call	_Setup	;wreg free
   214   007C4A                     l1086:
   215                           
   216                           ;main.c: 82:         MOSTRAR_DISPLAY();
   217   007C4A  EC69  F03F         	call	_MOSTRAR_DISPLAY	;wreg free
   218   007C4E  EF25  F03E         	goto	l1086
   219   007C52  EF00  F000         	goto	start
   220   007C56                     __end_of_main:
   221                           	callstack 0
   222                           
   223 ;; *************** function _Setup *****************
   224 ;; Defined at:
   225 ;;		line 30 in file "Setup.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   239 ;;      Params:         0       0       0       0       0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used: 1
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		_SetupADC
   248 ;;		_SetupOscilador
   249 ;;		_Setupint
   250 ;;		_Setupports
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text1
   257   007C56                     __ptext1:
   258                           	callstack 0
   259   007C56                     _Setup:
   260                           	callstack 29
   261   007C56                     
   262                           ;Setup.c: 32:     SetupOscilador();
   263   007C56  EC0F  F03E         	call	_SetupOscilador	;wreg free
   264                           
   265                           ;Setup.c: 33:     Setupports();
   266   007C5A  EC12  F03E         	call	_Setupports	;wreg free
   267   007C5E                     
   268                           ;Setup.c: 34:     Setupint();
   269   007C5E  EC0E  F03E         	call	_Setupint	;wreg free
   270   007C62                     
   271                           ;Setup.c: 35:     SetupADC();
   272   007C62  EC1C  F03E         	call	_SetupADC	;wreg free
   273   007C66  0012               	return		;funcret
   274   007C68                     __end_of_Setup:
   275                           	callstack 0
   276                           
   277 ;; *************** function _Setupports *****************
   278 ;; Defined at:
   279 ;;		line 9 in file "Setup.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used: 1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		_Setup
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text2
   307   007C24                     __ptext2:
   308                           	callstack 0
   309   007C24                     _Setupports:
   310                           	callstack 29
   311   007C24                     
   312                           ;Setup.c: 11:     TRISB = 0x00;
   313   007C24  0E00               	movlw	0
   314   007C26  6E93               	movwf	147,c	;volatile
   315                           
   316                           ;Setup.c: 12:     TRISD = 0x00;
   317   007C28  0E00               	movlw	0
   318   007C2A  6E95               	movwf	149,c	;volatile
   319   007C2C  0012               	return		;funcret
   320   007C2E                     __end_of_Setupports:
   321                           	callstack 0
   322                           
   323 ;; *************** function _Setupint *****************
   324 ;; Defined at:
   325 ;;		line 15 in file "Setup.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		None
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   339 ;;      Params:         0       0       0       0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_Setup
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text3
   353   007C1C                     __ptext3:
   354                           	callstack 0
   355   007C1C                     _Setupint:
   356                           	callstack 29
   357   007C1C  0012               	return		;funcret
   358   007C1E                     __end_of_Setupint:
   359                           	callstack 0
   360                           
   361 ;; *************** function _SetupOscilador *****************
   362 ;; Defined at:
   363 ;;		line 4 in file "Setup.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_Setup
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text4
   391   007C1E                     __ptext4:
   392                           	callstack 0
   393   007C1E                     _SetupOscilador:
   394                           	callstack 29
   395   007C1E                     
   396                           ;Setup.c: 6:     OSCCON = 0b01110010;
   397   007C1E  0E72               	movlw	114
   398   007C20  6ED3               	movwf	211,c	;volatile
   399   007C22  0012               	return		;funcret
   400   007C24                     __end_of_SetupOscilador:
   401                           	callstack 0
   402                           
   403 ;; *************** function _SetupADC *****************
   404 ;; Defined at:
   405 ;;		line 20 in file "Setup.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         0       0       0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_Setup
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text5
   433   007C38                     __ptext5:
   434                           	callstack 0
   435   007C38                     _SetupADC:
   436                           	callstack 29
   437   007C38                     
   438                           ;Setup.c: 23:     ADCON0 = 0b00000001;
   439   007C38  0E01               	movlw	1
   440   007C3A  6EC2               	movwf	194,c	;volatile
   441                           
   442                           ;Setup.c: 24:     ADCON1 = 0b00000000;
   443   007C3C  0E00               	movlw	0
   444   007C3E  6EC1               	movwf	193,c	;volatile
   445                           
   446                           ;Setup.c: 25:     ADCON2 = 0b10001000;
   447   007C40  0E88               	movlw	136
   448   007C42  6EC0               	movwf	192,c	;volatile
   449   007C44  0012               	return		;funcret
   450   007C46                     __end_of_SetupADC:
   451                           	callstack 0
   452                           
   453 ;; *************** function _MOSTRAR_DISPLAY *****************
   454 ;; Defined at:
   455 ;;		line 57 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0
   471 ;;      Temps:          1       0       0       0       0       0       0       0       0
   472 ;;      Totals:         1       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        1 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 1
   476 ;; This function calls:
   477 ;;		_DISPLAY_7SEG
   478 ;;		_ReadADC
   479 ;;		___awdiv
   480 ;;		___awmod
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text6
   487   007ED2                     __ptext6:
   488                           	callstack 0
   489   007ED2                     _MOSTRAR_DISPLAY:
   490                           	callstack 29
   491   007ED2                     
   492                           ;main.c: 59:     prueba=ReadADC(0);
   493   007ED2  0E00               	movlw	0
   494   007ED4  EC34  F03E         	call	_ReadADC
   495   007ED8  C001  F010         	movff	?_ReadADC,_prueba
   496   007EDC  C002  F011         	movff	?_ReadADC+1,_prueba+1
   497                           
   498                           ;main.c: 60:     D1 = prueba / 1000;
   499   007EE0  C010  F001         	movff	_prueba,___awdiv@dividend
   500   007EE4  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   501   007EE8  0E03               	movlw	3
   502   007EEA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   503   007EEC  0EE8               	movlw	232
   504   007EEE  6E03               	movwf	___awdiv@divisor^0,c
   505   007EF0  EC07  F03F         	call	___awdiv	;wreg free
   506   007EF4  C001  F018         	movff	?___awdiv,_D1
   507   007EF8  C002  F019         	movff	?___awdiv+1,_D1+1
   508                           
   509                           ;main.c: 61:     D2 = (prueba / 100) % 10;
   510   007EFC  0E00               	movlw	0
   511   007EFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   512   007F00  0E64               	movlw	100
   513   007F02  6E03               	movwf	___awdiv@divisor^0,c
   514   007F04  C010  F001         	movff	_prueba,___awdiv@dividend
   515   007F08  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   516   007F0C  EC07  F03F         	call	___awdiv	;wreg free
   517   007F10  C001  F009         	movff	?___awdiv,___awmod@dividend
   518   007F14  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   519   007F18  0E00               	movlw	0
   520   007F1A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   521   007F1C  0E0A               	movlw	10
   522   007F1E  6E0B               	movwf	___awmod@divisor^0,c
   523   007F20  EC4E  F03E         	call	___awmod	;wreg free
   524   007F24  C009  F016         	movff	?___awmod,_D2
   525   007F28  C00A  F017         	movff	?___awmod+1,_D2+1
   526                           
   527                           ;main.c: 62:     D3 = (prueba / 10) % 10;
   528   007F2C  0E00               	movlw	0
   529   007F2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   530   007F30  0E0A               	movlw	10
   531   007F32  6E03               	movwf	___awdiv@divisor^0,c
   532   007F34  C010  F001         	movff	_prueba,___awdiv@dividend
   533   007F38  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   534   007F3C  EC07  F03F         	call	___awdiv	;wreg free
   535   007F40  C001  F009         	movff	?___awdiv,___awmod@dividend
   536   007F44  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   537   007F48  0E00               	movlw	0
   538   007F4A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   539   007F4C  0E0A               	movlw	10
   540   007F4E  6E0B               	movwf	___awmod@divisor^0,c
   541   007F50  EC4E  F03E         	call	___awmod	;wreg free
   542   007F54  C009  F014         	movff	?___awmod,_D3
   543   007F58  C00A  F015         	movff	?___awmod+1,_D3+1
   544                           
   545                           ;main.c: 63:     D4 = prueba % 10;
   546   007F5C  C010  F009         	movff	_prueba,___awmod@dividend
   547   007F60  C011  F00A         	movff	_prueba+1,___awmod@dividend+1
   548   007F64  0E00               	movlw	0
   549   007F66  6E0C               	movwf	(___awmod@divisor+1)^0,c
   550   007F68  0E0A               	movlw	10
   551   007F6A  6E0B               	movwf	___awmod@divisor^0,c
   552   007F6C  EC4E  F03E         	call	___awmod	;wreg free
   553   007F70  C009  F012         	movff	?___awmod,_D4
   554   007F74  C00A  F013         	movff	?___awmod+1,_D4+1
   555   007F78                     
   556                           ;main.c: 64:     _delay((unsigned long)((5)*(8000000/4000.0)));
   557   007F78  0E0D               	movlw	13
   558   007F7A  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   559   007F7C  0EFC               	movlw	252
   560   007F7E                     u277:
   561   007F7E  2EE8               	decfsz	wreg,f,c
   562   007F80  D7FE               	bra	u277
   563   007F82  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   564   007F84  D7FC               	bra	u277
   565   007F86                     
   566                           ;main.c: 65:     DISPLAY_7SEG(D1);
   567   007F86  C018  F001         	movff	_D1,DISPLAY_7SEG@x
   568   007F8A  C019  F002         	movff	_D1+1,DISPLAY_7SEG@x+1
   569   007F8E  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   570   007F92                     
   571                           ;main.c: 66:     LATB =0b00001110;
   572   007F92  0E0E               	movlw	14
   573   007F94  6E8A               	movwf	138,c	;volatile
   574   007F96                     
   575                           ;main.c: 67:     _delay((unsigned long)((5)*(8000000/4000.0)));
   576   007F96  0E0D               	movlw	13
   577   007F98  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   578   007F9A  0EFC               	movlw	252
   579   007F9C                     u287:
   580   007F9C  2EE8               	decfsz	wreg,f,c
   581   007F9E  D7FE               	bra	u287
   582   007FA0  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   583   007FA2  D7FC               	bra	u287
   584   007FA4                     
   585                           ;main.c: 68:     DISPLAY_7SEG(D2);
   586   007FA4  C016  F001         	movff	_D2,DISPLAY_7SEG@x
   587   007FA8  C017  F002         	movff	_D2+1,DISPLAY_7SEG@x+1
   588   007FAC  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   589   007FB0                     
   590                           ;main.c: 69:     LATB =0b00001101;
   591   007FB0  0E0D               	movlw	13
   592   007FB2  6E8A               	movwf	138,c	;volatile
   593   007FB4                     
   594                           ;main.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
   595   007FB4  0E0D               	movlw	13
   596   007FB6  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   597   007FB8  0EFC               	movlw	252
   598   007FBA                     u297:
   599   007FBA  2EE8               	decfsz	wreg,f,c
   600   007FBC  D7FE               	bra	u297
   601   007FBE  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   602   007FC0  D7FC               	bra	u297
   603   007FC2                     
   604                           ;main.c: 71:     DISPLAY_7SEG(D3);
   605   007FC2  C014  F001         	movff	_D3,DISPLAY_7SEG@x
   606   007FC6  C015  F002         	movff	_D3+1,DISPLAY_7SEG@x+1
   607   007FCA  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   608   007FCE                     
   609                           ;main.c: 72:     LATB =0b00001011;
   610   007FCE  0E0B               	movlw	11
   611   007FD0  6E8A               	movwf	138,c	;volatile
   612   007FD2                     
   613                           ;main.c: 73:     _delay((unsigned long)((5)*(8000000/4000.0)));
   614   007FD2  0E0D               	movlw	13
   615   007FD4  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   616   007FD6  0EFC               	movlw	252
   617   007FD8                     u307:
   618   007FD8  2EE8               	decfsz	wreg,f,c
   619   007FDA  D7FE               	bra	u307
   620   007FDC  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   621   007FDE  D7FC               	bra	u307
   622   007FE0                     
   623                           ;main.c: 74:     DISPLAY_7SEG(D4);
   624   007FE0  C012  F001         	movff	_D4,DISPLAY_7SEG@x
   625   007FE4  C013  F002         	movff	_D4+1,DISPLAY_7SEG@x+1
   626   007FE8  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   627   007FEC                     
   628                           ;main.c: 75:     LATB =0b00000111;
   629   007FEC  0E07               	movlw	7
   630   007FEE  6E8A               	movwf	138,c	;volatile
   631   007FF0                     
   632                           ;main.c: 76:     _delay((unsigned long)((5)*(8000000/4000.0)));
   633   007FF0  0E0D               	movlw	13
   634   007FF2  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   635   007FF4  0EFC               	movlw	252
   636   007FF6                     u317:
   637   007FF6  2EE8               	decfsz	wreg,f,c
   638   007FF8  D7FE               	bra	u317
   639   007FFA  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   640   007FFC  D7FC               	bra	u317
   641   007FFE  0012               	return		;funcret
   642   008000                     __end_of_MOSTRAR_DISPLAY:
   643                           	callstack 0
   644                           
   645 ;; *************** function ___awmod *****************
   646 ;; Defined at:
   647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  dividend        2    8[COMRAM] int 
   650 ;;  divisor         2   10[COMRAM] int 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  sign            1   13[COMRAM] unsigned char 
   653 ;;  counter         1   12[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  2    8[COMRAM] int 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   663 ;;      Params:         4       0       0       0       0       0       0       0       0
   664 ;;      Locals:         2       0       0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0
   666 ;;      Totals:         6       0       0       0       0       0       0       0       0
   667 ;;Total ram usage:        6 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_MOSTRAR_DISPLAY
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text7
   677   007C9C                     __ptext7:
   678                           	callstack 0
   679   007C9C                     ___awmod:
   680                           	callstack 29
   681   007C9C  0E00               	movlw	0
   682   007C9E  6E0E               	movwf	___awmod@sign^0,c
   683   007CA0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
   684   007CA2  EF57  F03E         	goto	u210
   685   007CA6  EF55  F03E         	goto	u211
   686   007CAA                     u211:
   687   007CAA  EF5D  F03E         	goto	l1028
   688   007CAE                     u210:
   689   007CAE  6C09               	negf	___awmod@dividend^0,c
   690   007CB0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   691   007CB2  B0D8               	btfsc	status,0,c
   692   007CB4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   693   007CB6  0E01               	movlw	1
   694   007CB8  6E0E               	movwf	___awmod@sign^0,c
   695   007CBA                     l1028:
   696   007CBA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
   697   007CBC  EF64  F03E         	goto	u220
   698   007CC0  EF62  F03E         	goto	u221
   699   007CC4                     u221:
   700   007CC4  EF68  F03E         	goto	l1032
   701   007CC8                     u220:
   702   007CC8  6C0B               	negf	___awmod@divisor^0,c
   703   007CCA  1E0C               	comf	(___awmod@divisor+1)^0,f,c
   704   007CCC  B0D8               	btfsc	status,0,c
   705   007CCE  2A0C               	incf	(___awmod@divisor+1)^0,f,c
   706   007CD0                     l1032:
   707   007CD0  500B               	movf	___awmod@divisor^0,w,c
   708   007CD2  100C               	iorwf	(___awmod@divisor+1)^0,w,c
   709   007CD4  B4D8               	btfsc	status,2,c
   710   007CD6  EF6F  F03E         	goto	u231
   711   007CDA  EF71  F03E         	goto	u230
   712   007CDE                     u231:
   713   007CDE  EF95  F03E         	goto	l1048
   714   007CE2                     u230:
   715   007CE2  0E01               	movlw	1
   716   007CE4  6E0D               	movwf	___awmod@counter^0,c
   717   007CE6  EF79  F03E         	goto	l1038
   718   007CEA                     l1036:
   719   007CEA  90D8               	bcf	status,0,c
   720   007CEC  360B               	rlcf	___awmod@divisor^0,f,c
   721   007CEE  360C               	rlcf	(___awmod@divisor+1)^0,f,c
   722   007CF0  2A0D               	incf	___awmod@counter^0,f,c
   723   007CF2                     l1038:
   724   007CF2  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
   725   007CF4  EF7E  F03E         	goto	u241
   726   007CF8  EF80  F03E         	goto	u240
   727   007CFC                     u241:
   728   007CFC  EF75  F03E         	goto	l1036
   729   007D00                     u240:
   730   007D00                     l1040:
   731   007D00  500B               	movf	___awmod@divisor^0,w,c
   732   007D02  5C09               	subwf	___awmod@dividend^0,w,c
   733   007D04  500C               	movf	(___awmod@divisor+1)^0,w,c
   734   007D06  580A               	subwfb	(___awmod@dividend+1)^0,w,c
   735   007D08  A0D8               	btfss	status,0,c
   736   007D0A  EF89  F03E         	goto	u251
   737   007D0E  EF8B  F03E         	goto	u250
   738   007D12                     u251:
   739   007D12  EF8F  F03E         	goto	l1044
   740   007D16                     u250:
   741   007D16  500B               	movf	___awmod@divisor^0,w,c
   742   007D18  5E09               	subwf	___awmod@dividend^0,f,c
   743   007D1A  500C               	movf	(___awmod@divisor+1)^0,w,c
   744   007D1C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
   745   007D1E                     l1044:
   746   007D1E  90D8               	bcf	status,0,c
   747   007D20  320C               	rrcf	(___awmod@divisor+1)^0,f,c
   748   007D22  320B               	rrcf	___awmod@divisor^0,f,c
   749   007D24  2E0D               	decfsz	___awmod@counter^0,f,c
   750   007D26  EF80  F03E         	goto	l1040
   751   007D2A                     l1048:
   752   007D2A  500E               	movf	___awmod@sign^0,w,c
   753   007D2C  B4D8               	btfsc	status,2,c
   754   007D2E  EF9B  F03E         	goto	u261
   755   007D32  EF9D  F03E         	goto	u260
   756   007D36                     u261:
   757   007D36  EFA1  F03E         	goto	l1052
   758   007D3A                     u260:
   759   007D3A  6C09               	negf	___awmod@dividend^0,c
   760   007D3C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   761   007D3E  B0D8               	btfsc	status,0,c
   762   007D40  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   763   007D42                     l1052:
   764   007D42  C009  F009         	movff	___awmod@dividend,?___awmod
   765   007D46  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   766   007D4A  0012               	return		;funcret
   767   007D4C                     __end_of___awmod:
   768                           	callstack 0
   769                           
   770 ;; *************** function ___awdiv *****************
   771 ;; Defined at:
   772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  dividend        2    0[COMRAM] int 
   775 ;;  divisor         2    2[COMRAM] int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  quotient        2    6[COMRAM] int 
   778 ;;  sign            1    5[COMRAM] unsigned char 
   779 ;;  counter         1    4[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2    0[COMRAM] int 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         4       0       0       0       0       0       0       0       0
   790 ;;      Locals:         4       0       0       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0
   792 ;;      Totals:         8       0       0       0       0       0       0       0       0
   793 ;;Total ram usage:        8 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_MOSTRAR_DISPLAY
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text8
   803   007E0E                     __ptext8:
   804                           	callstack 0
   805   007E0E                     ___awdiv:
   806                           	callstack 29
   807   007E0E  0E00               	movlw	0
   808   007E10  6E06               	movwf	___awdiv@sign^0,c
   809   007E12  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   810   007E14  EF10  F03F         	goto	u150
   811   007E18  EF0E  F03F         	goto	u151
   812   007E1C                     u151:
   813   007E1C  EF16  F03F         	goto	l984
   814   007E20                     u150:
   815   007E20  6C03               	negf	___awdiv@divisor^0,c
   816   007E22  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   817   007E24  B0D8               	btfsc	status,0,c
   818   007E26  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   819   007E28  0E01               	movlw	1
   820   007E2A  6E06               	movwf	___awdiv@sign^0,c
   821   007E2C                     l984:
   822   007E2C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   823   007E2E  EF1D  F03F         	goto	u160
   824   007E32  EF1B  F03F         	goto	u161
   825   007E36                     u161:
   826   007E36  EF23  F03F         	goto	l990
   827   007E3A                     u160:
   828   007E3A  6C01               	negf	___awdiv@dividend^0,c
   829   007E3C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   830   007E3E  B0D8               	btfsc	status,0,c
   831   007E40  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   832   007E42  0E01               	movlw	1
   833   007E44  1A06               	xorwf	___awdiv@sign^0,f,c
   834   007E46                     l990:
   835   007E46  0E00               	movlw	0
   836   007E48  6E08               	movwf	(___awdiv@quotient+1)^0,c
   837   007E4A  0E00               	movlw	0
   838   007E4C  6E07               	movwf	___awdiv@quotient^0,c
   839   007E4E  5003               	movf	___awdiv@divisor^0,w,c
   840   007E50  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   841   007E52  B4D8               	btfsc	status,2,c
   842   007E54  EF2E  F03F         	goto	u171
   843   007E58  EF30  F03F         	goto	u170
   844   007E5C                     u171:
   845   007E5C  EF58  F03F         	goto	l1012
   846   007E60                     u170:
   847   007E60  0E01               	movlw	1
   848   007E62  6E05               	movwf	___awdiv@counter^0,c
   849   007E64  EF38  F03F         	goto	l998
   850   007E68                     l996:
   851   007E68  90D8               	bcf	status,0,c
   852   007E6A  3603               	rlcf	___awdiv@divisor^0,f,c
   853   007E6C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   854   007E6E  2A05               	incf	___awdiv@counter^0,f,c
   855   007E70                     l998:
   856   007E70  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   857   007E72  EF3D  F03F         	goto	u181
   858   007E76  EF3F  F03F         	goto	u180
   859   007E7A                     u181:
   860   007E7A  EF34  F03F         	goto	l996
   861   007E7E                     u180:
   862   007E7E                     l1000:
   863   007E7E  90D8               	bcf	status,0,c
   864   007E80  3607               	rlcf	___awdiv@quotient^0,f,c
   865   007E82  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   866   007E84  5003               	movf	___awdiv@divisor^0,w,c
   867   007E86  5C01               	subwf	___awdiv@dividend^0,w,c
   868   007E88  5004               	movf	(___awdiv@divisor+1)^0,w,c
   869   007E8A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   870   007E8C  A0D8               	btfss	status,0,c
   871   007E8E  EF4B  F03F         	goto	u191
   872   007E92  EF4D  F03F         	goto	u190
   873   007E96                     u191:
   874   007E96  EF52  F03F         	goto	l1008
   875   007E9A                     u190:
   876   007E9A  5003               	movf	___awdiv@divisor^0,w,c
   877   007E9C  5E01               	subwf	___awdiv@dividend^0,f,c
   878   007E9E  5004               	movf	(___awdiv@divisor+1)^0,w,c
   879   007EA0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   880   007EA2  8007               	bsf	___awdiv@quotient^0,0,c
   881   007EA4                     l1008:
   882   007EA4  90D8               	bcf	status,0,c
   883   007EA6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   884   007EA8  3203               	rrcf	___awdiv@divisor^0,f,c
   885   007EAA  2E05               	decfsz	___awdiv@counter^0,f,c
   886   007EAC  EF3F  F03F         	goto	l1000
   887   007EB0                     l1012:
   888   007EB0  5006               	movf	___awdiv@sign^0,w,c
   889   007EB2  B4D8               	btfsc	status,2,c
   890   007EB4  EF5E  F03F         	goto	u201
   891   007EB8  EF60  F03F         	goto	u200
   892   007EBC                     u201:
   893   007EBC  EF64  F03F         	goto	l1016
   894   007EC0                     u200:
   895   007EC0  6C07               	negf	___awdiv@quotient^0,c
   896   007EC2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   897   007EC4  B0D8               	btfsc	status,0,c
   898   007EC6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   899   007EC8                     l1016:
   900   007EC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
   901   007ECC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   902   007ED0  0012               	return		;funcret
   903   007ED2                     __end_of___awdiv:
   904                           	callstack 0
   905                           
   906 ;; *************** function _ReadADC *****************
   907 ;; Defined at:
   908 ;;		line 12 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  channel         1    wreg     unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  channel         1    4[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  2    0[COMRAM] unsigned int 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   922 ;;      Params:         2       0       0       0       0       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0       0       0       0       0
   924 ;;      Temps:          2       0       0       0       0       0       0       0       0
   925 ;;      Totals:         5       0       0       0       0       0       0       0       0
   926 ;;Total ram usage:        5 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_MOSTRAR_DISPLAY
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text9
   936   007C68                     __ptext9:
   937                           	callstack 0
   938   007C68                     _ReadADC:
   939                           	callstack 29
   940                           
   941                           ;incstack = 0
   942                           ;ReadADC@channel stored from wreg
   943   007C68  6E05               	movwf	ReadADC@channel^0,c
   944   007C6A                     
   945                           ;main.c: 14:     ADCON0 = (channel << 2) | 0x01;
   946   007C6A  4405               	rlncf	ReadADC@channel^0,w,c
   947   007C6C  46E8               	rlncf	wreg,f,c
   948   007C6E  0BFC               	andlw	252
   949   007C70  0901               	iorlw	1
   950   007C72  6EC2               	movwf	194,c	;volatile
   951   007C74                     
   952                           ;main.c: 15:     GO_nDONE = 1;
   953   007C74  82C2               	bsf	4034,1,c	;volatile
   954   007C76                     l56:
   955   007C76  B2C2               	btfsc	4034,1,c	;volatile
   956   007C78  EF40  F03E         	goto	u141
   957   007C7C  EF42  F03E         	goto	u140
   958   007C80                     u141:
   959   007C80  EF3B  F03E         	goto	l56
   960   007C84                     u140:
   961   007C84                     
   962                           ;main.c: 17:     return ((ADRESH << 8) | ADRESL);
   963   007C84  50C3               	movf	195,w,c	;volatile
   964   007C86  CFC4 F003          	movff	4036,??_ReadADC	;volatile
   965   007C8A  6A04               	clrf	(??_ReadADC+1)^0,c
   966   007C8C  C003  F004         	movff	??_ReadADC,??_ReadADC+1
   967   007C90  6A03               	clrf	??_ReadADC^0,c
   968   007C92  1003               	iorwf	??_ReadADC^0,w,c
   969   007C94  6E01               	movwf	?_ReadADC^0,c
   970   007C96  5004               	movf	(??_ReadADC+1)^0,w,c
   971   007C98  6E02               	movwf	(?_ReadADC+1)^0,c
   972   007C9A  0012               	return		;funcret
   973   007C9C                     __end_of_ReadADC:
   974                           	callstack 0
   975                           
   976 ;; *************** function _DISPLAY_7SEG *****************
   977 ;; Defined at:
   978 ;;		line 20 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  x               2    0[COMRAM] int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         2       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0       0       0       0       0
   995 ;;      Totals:         4       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_MOSTRAR_DISPLAY
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text10
  1006   007D4C                     __ptext10:
  1007                           	callstack 0
  1008   007D4C                     _DISPLAY_7SEG:
  1009                           	callstack 29
  1010   007D4C                     
  1011                           ;main.c: 21:     switch (x) {
  1012   007D4C  EFD0  F03E         	goto	l970
  1013   007D50                     l948:
  1014                           
  1015                           ;main.c: 23:             LATD =0b11000000;
  1016   007D50  0EC0               	movlw	192
  1017   007D52  6E8C               	movwf	140,c	;volatile
  1018                           
  1019                           ;main.c: 24:             break;
  1020   007D54  EF06  F03F         	goto	l75
  1021   007D58                     l950:
  1022                           
  1023                           ;main.c: 26:             LATD =0b11111001;
  1024   007D58  0EF9               	movlw	249
  1025   007D5A  6E8C               	movwf	140,c	;volatile
  1026                           
  1027                           ;main.c: 27:             break;
  1028   007D5C  EF06  F03F         	goto	l75
  1029   007D60                     l952:
  1030                           
  1031                           ;main.c: 29:             LATD =0b10100100;
  1032   007D60  0EA4               	movlw	164
  1033   007D62  6E8C               	movwf	140,c	;volatile
  1034                           
  1035                           ;main.c: 30:             break;
  1036   007D64  EF06  F03F         	goto	l75
  1037   007D68                     l954:
  1038                           
  1039                           ;main.c: 32:             LATD =0b10110000;
  1040   007D68  0EB0               	movlw	176
  1041   007D6A  6E8C               	movwf	140,c	;volatile
  1042                           
  1043                           ;main.c: 33:             break;
  1044   007D6C  EF06  F03F         	goto	l75
  1045   007D70                     l956:
  1046                           
  1047                           ;main.c: 35:             LATD =0b10011001;
  1048   007D70  0E99               	movlw	153
  1049   007D72  6E8C               	movwf	140,c	;volatile
  1050                           
  1051                           ;main.c: 36:             break;
  1052   007D74  EF06  F03F         	goto	l75
  1053   007D78                     l958:
  1054                           
  1055                           ;main.c: 38:             LATD =0b10010010;
  1056   007D78  0E92               	movlw	146
  1057   007D7A  6E8C               	movwf	140,c	;volatile
  1058                           
  1059                           ;main.c: 39:             break;
  1060   007D7C  EF06  F03F         	goto	l75
  1061   007D80                     l960:
  1062                           
  1063                           ;main.c: 41:             LATD =0b10000010;
  1064   007D80  0E82               	movlw	130
  1065   007D82  6E8C               	movwf	140,c	;volatile
  1066                           
  1067                           ;main.c: 42:             break;
  1068   007D84  EF06  F03F         	goto	l75
  1069   007D88                     l962:
  1070                           
  1071                           ;main.c: 44:             LATD =0b11111000;
  1072   007D88  0EF8               	movlw	248
  1073   007D8A  6E8C               	movwf	140,c	;volatile
  1074                           
  1075                           ;main.c: 45:             break;
  1076   007D8C  EF06  F03F         	goto	l75
  1077   007D90                     l964:
  1078                           
  1079                           ;main.c: 47:             LATD =0b10000000;
  1080   007D90  0E80               	movlw	128
  1081   007D92  6E8C               	movwf	140,c	;volatile
  1082                           
  1083                           ;main.c: 48:             break;
  1084   007D94  EF06  F03F         	goto	l75
  1085   007D98                     l966:
  1086                           
  1087                           ;main.c: 50:             LATD =0b10010000;
  1088   007D98  0E90               	movlw	144
  1089   007D9A  6E8C               	movwf	140,c	;volatile
  1090                           
  1091                           ;main.c: 51:             break;
  1092   007D9C  EF06  F03F         	goto	l75
  1093   007DA0                     l970:
  1094   007DA0  C001  F003         	movff	DISPLAY_7SEG@x,??_DISPLAY_7SEG
  1095   007DA4  C002  F004         	movff	DISPLAY_7SEG@x+1,??_DISPLAY_7SEG+1
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104   007DA8  5004               	movf	(??_DISPLAY_7SEG+1)^0,w,c
  1105   007DAA  0A00               	xorlw	0	; case 0
  1106   007DAC  B4D8               	btfsc	status,2,c
  1107   007DAE  EFDB  F03E         	goto	l1092
  1108   007DB2  EF06  F03F         	goto	l75
  1109   007DB6                     l1092:
  1110                           
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 10, Range of values is 0 to 9
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte           31    16 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117   007DB6  5003               	movf	??_DISPLAY_7SEG^0,w,c
  1118   007DB8  0A00               	xorlw	0	; case 0
  1119   007DBA  B4D8               	btfsc	status,2,c
  1120   007DBC  EFA8  F03E         	goto	l948
  1121   007DC0  0A01               	xorlw	1	; case 1
  1122   007DC2  B4D8               	btfsc	status,2,c
  1123   007DC4  EFAC  F03E         	goto	l950
  1124   007DC8  0A03               	xorlw	3	; case 2
  1125   007DCA  B4D8               	btfsc	status,2,c
  1126   007DCC  EFB0  F03E         	goto	l952
  1127   007DD0  0A01               	xorlw	1	; case 3
  1128   007DD2  B4D8               	btfsc	status,2,c
  1129   007DD4  EFB4  F03E         	goto	l954
  1130   007DD8  0A07               	xorlw	7	; case 4
  1131   007DDA  B4D8               	btfsc	status,2,c
  1132   007DDC  EFB8  F03E         	goto	l956
  1133   007DE0  0A01               	xorlw	1	; case 5
  1134   007DE2  B4D8               	btfsc	status,2,c
  1135   007DE4  EFBC  F03E         	goto	l958
  1136   007DE8  0A03               	xorlw	3	; case 6
  1137   007DEA  B4D8               	btfsc	status,2,c
  1138   007DEC  EFC0  F03E         	goto	l960
  1139   007DF0  0A01               	xorlw	1	; case 7
  1140   007DF2  B4D8               	btfsc	status,2,c
  1141   007DF4  EFC4  F03E         	goto	l962
  1142   007DF8  0A0F               	xorlw	15	; case 8
  1143   007DFA  B4D8               	btfsc	status,2,c
  1144   007DFC  EFC8  F03E         	goto	l964
  1145   007E00  0A01               	xorlw	1	; case 9
  1146   007E02  B4D8               	btfsc	status,2,c
  1147   007E04  EFCC  F03E         	goto	l966
  1148   007E08  EF06  F03F         	goto	l75
  1149   007E0C                     l75:
  1150   007E0C  0012               	return		;funcret
  1151   007E0E                     __end_of_DISPLAY_7SEG:
  1152                           	callstack 0
  1153   000000                     
  1154                           	psect	rparam
  1155   000000                     
  1156                           	psect	idloc
  1157                           
  1158                           ;Config register IDLOC0 @ 0x200000
  1159                           ;	unspecified, using default values
  1160   200000                     	org	2097152
  1161   200000  FF                 	db	255
  1162                           
  1163                           ;Config register IDLOC1 @ 0x200001
  1164                           ;	unspecified, using default values
  1165   200001                     	org	2097153
  1166   200001  FF                 	db	255
  1167                           
  1168                           ;Config register IDLOC2 @ 0x200002
  1169                           ;	unspecified, using default values
  1170   200002                     	org	2097154
  1171   200002  FF                 	db	255
  1172                           
  1173                           ;Config register IDLOC3 @ 0x200003
  1174                           ;	unspecified, using default values
  1175   200003                     	org	2097155
  1176   200003  FF                 	db	255
  1177                           
  1178                           ;Config register IDLOC4 @ 0x200004
  1179                           ;	unspecified, using default values
  1180   200004                     	org	2097156
  1181   200004  FF                 	db	255
  1182                           
  1183                           ;Config register IDLOC5 @ 0x200005
  1184                           ;	unspecified, using default values
  1185   200005                     	org	2097157
  1186   200005  FF                 	db	255
  1187                           
  1188                           ;Config register IDLOC6 @ 0x200006
  1189                           ;	unspecified, using default values
  1190   200006                     	org	2097158
  1191   200006  FF                 	db	255
  1192                           
  1193                           ;Config register IDLOC7 @ 0x200007
  1194                           ;	unspecified, using default values
  1195   200007                     	org	2097159
  1196   200007  FF                 	db	255
  1197                           
  1198                           	psect	config
  1199                           
  1200                           ;Config register CONFIG1L @ 0x300000
  1201                           ;	PLL Prescaler Selection bits
  1202                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1203                           ;	System Clock Postscaler Selection bits
  1204                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1205                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1206                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1207   300000                     	org	3145728
  1208   300000  00                 	db	0
  1209                           
  1210                           ;Config register CONFIG1H @ 0x300001
  1211                           ;	Oscillator Selection bits
  1212                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1213                           ;	Fail-Safe Clock Monitor Enable bit
  1214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1215                           ;	Internal/External Oscillator Switchover bit
  1216                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1217   300001                     	org	3145729
  1218   300001  08                 	db	8
  1219                           
  1220                           ;Config register CONFIG2L @ 0x300002
  1221                           ;	Power-up Timer Enable bit
  1222                           ;	PWRT = OFF, PWRT disabled
  1223                           ;	Brown-out Reset Enable bits
  1224                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1225                           ;	Brown-out Reset Voltage bits
  1226                           ;	BORV = 3, Minimum setting 2.05V
  1227                           ;	USB Voltage Regulator Enable bit
  1228                           ;	VREGEN = OFF, USB voltage regulator disabled
  1229   300002                     	org	3145730
  1230   300002  1F                 	db	31
  1231                           
  1232                           ;Config register CONFIG2H @ 0x300003
  1233                           ;	Watchdog Timer Enable bit
  1234                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1235                           ;	Watchdog Timer Postscale Select bits
  1236                           ;	WDTPS = 32768, 1:32768
  1237   300003                     	org	3145731
  1238   300003  1E                 	db	30
  1239                           
  1240                           ; Padding undefined space
  1241   300004                     	org	3145732
  1242   300004  FF                 	db	255
  1243                           
  1244                           ;Config register CONFIG3H @ 0x300005
  1245                           ;	CCP2 MUX bit
  1246                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1247                           ;	PORTB A/D Enable bit
  1248                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1249                           ;	Low-Power Timer 1 Oscillator Enable bit
  1250                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1251                           ;	MCLR Pin Enable bit
  1252                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1253   300005                     	org	3145733
  1254   300005  83                 	db	131
  1255                           
  1256                           ;Config register CONFIG4L @ 0x300006
  1257                           ;	Stack Full/Underflow Reset Enable bit
  1258                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1259                           ;	Single-Supply ICSP Enable bit
  1260                           ;	LVP = OFF, Single-Supply ICSP disabled
  1261                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1262                           ;	ICPRT = OFF, ICPORT disabled
  1263                           ;	Extended Instruction Set Enable bit
  1264                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1265                           ;	Background Debugger Enable bit
  1266                           ;	DEBUG = 0x1, unprogrammed default
  1267   300006                     	org	3145734
  1268   300006  81                 	db	129
  1269                           
  1270                           ; Padding undefined space
  1271   300007                     	org	3145735
  1272   300007  FF                 	db	255
  1273                           
  1274                           ;Config register CONFIG5L @ 0x300008
  1275                           ;	Code Protection bit
  1276                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1277                           ;	Code Protection bit
  1278                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1279                           ;	Code Protection bit
  1280                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1281                           ;	Code Protection bit
  1282                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1283   300008                     	org	3145736
  1284   300008  0F                 	db	15
  1285                           
  1286                           ;Config register CONFIG5H @ 0x300009
  1287                           ;	Boot Block Code Protection bit
  1288                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1289                           ;	Data EEPROM Code Protection bit
  1290                           ;	CPD = OFF, Data EEPROM is not code-protected
  1291   300009                     	org	3145737
  1292   300009  C0                 	db	192
  1293                           
  1294                           ;Config register CONFIG6L @ 0x30000A
  1295                           ;	Write Protection bit
  1296                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1297                           ;	Write Protection bit
  1298                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1299                           ;	Write Protection bit
  1300                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1301                           ;	Write Protection bit
  1302                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1303   30000A                     	org	3145738
  1304   30000A  0F                 	db	15
  1305                           
  1306                           ;Config register CONFIG6H @ 0x30000B
  1307                           ;	Configuration Register Write Protection bit
  1308                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1309                           ;	Boot Block Write Protection bit
  1310                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1311                           ;	Data EEPROM Write Protection bit
  1312                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1313   30000B                     	org	3145739
  1314   30000B  E0                 	db	224
  1315                           
  1316                           ;Config register CONFIG7L @ 0x30000C
  1317                           ;	Table Read Protection bit
  1318                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1319                           ;	Table Read Protection bit
  1320                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1321                           ;	Table Read Protection bit
  1322                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1323                           ;	Table Read Protection bit
  1324                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1325   30000C                     	org	3145740
  1326   30000C  0F                 	db	15
  1327                           
  1328                           ;Config register CONFIG7H @ 0x30000D
  1329                           ;	Boot Block Table Read Protection bit
  1330                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1331   30000D                     	org	3145741
  1332   30000D  40                 	db	64
  1333                           tosu	equ	0xFFF
  1334                           tosh	equ	0xFFE
  1335                           tosl	equ	0xFFD
  1336                           stkptr	equ	0xFFC
  1337                           pclatu	equ	0xFFB
  1338                           pclath	equ	0xFFA
  1339                           pcl	equ	0xFF9
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           prodh	equ	0xFF4
  1345                           prodl	equ	0xFF3
  1346                           indf0	equ	0xFEF
  1347                           postinc0	equ	0xFEE
  1348                           postdec0	equ	0xFED
  1349                           preinc0	equ	0xFEC
  1350                           plusw0	equ	0xFEB
  1351                           fsr0h	equ	0xFEA
  1352                           fsr0l	equ	0xFE9
  1353                           wreg	equ	0xFE8
  1354                           indf1	equ	0xFE7
  1355                           postinc1	equ	0xFE6
  1356                           postdec1	equ	0xFE5
  1357                           preinc1	equ	0xFE4
  1358                           plusw1	equ	0xFE3
  1359                           fsr1h	equ	0xFE2
  1360                           fsr1l	equ	0xFE1
  1361                           bsr	equ	0xFE0
  1362                           indf2	equ	0xFDF
  1363                           postinc2	equ	0xFDE
  1364                           postdec2	equ	0xFDD
  1365                           preinc2	equ	0xFDC
  1366                           plusw2	equ	0xFDB
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MOSTRAR_DISPLAY
    _MOSTRAR_DISPLAY->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1856
                    _MOSTRAR_DISPLAY
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                           _SetupADC
                     _SetupOscilador
                           _Setupint
                         _Setupports
 ---------------------------------------------------------------------------------
 (2) _Setupports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Setupint                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetupOscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOSTRAR_DISPLAY                                      1     1      0    1856
                                             14 COMRAM     1     1      0
                       _DISPLAY_7SEG
                            _ReadADC
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_7SEG                                         4     2      2     326
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MOSTRAR_DISPLAY
     _DISPLAY_7SEG
     _ReadADC
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _Setup
     _SetupADC
     _SetupOscilador
     _Setupint
     _Setupports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F      19       1       26.3%
STACK                0      0       0       2        0.0%
DATA                 0      0      19       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhhhh       E      0       0      21        0.0%
BITBIGSFRlhhl       2A      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BITBIGSFRllh         6      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      25        0.0%
BITBIGSFRllll       2A      0       0      26        0.0%
ABS                  0      0      19      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Nov 12 16:24:49 2023

                     _D1 0018                       _D2 0016                       _D3 0014  
                     _D4 0012                       l21 7C1C                       l15 7C22  
                     l24 7C44                       l18 7C2C                       l27 7C66  
                     l56 7C76                       l75 7E0C                       l59 7C9A  
                     l78 7FFE             ___awdiv@sign 0006                      l320 7ED0  
                    l333 7D4A                      l762 7C1E                      l770 7C1C  
                    l940 7C74                      l772 7C38                      l950 7D58  
                    l942 7C84                      l766 7C24                      l960 7D80  
                    l952 7D60                      l962 7D88                      l954 7D68  
                    l970 7DA0                      l946 7D4C                      l938 7C6A  
                    l964 7D90                      l956 7D70                      l948 7D50  
                    l980 7E20                      l966 7D98                      l958 7D78  
                    l990 7E46                      l982 7E28                      l894 7C56  
                    l992 7E4E                      l984 7E2C                      l976 7E0E  
                    l896 7C5E                      l994 7E60                      l986 7E3A  
                    l978 7E12                      l898 7C62                      l996 7E68  
                    l988 7E42                      l998 7E70                      u200 7EC0  
                    u201 7EBC                      u210 7CAE                      u211 7CAA  
                    u140 7C84                      u220 7CC8                      u141 7C80  
                    u221 7CC4                      u150 7E20                      u230 7CE2  
                    u151 7E1C                      u231 7CDE                      u160 7E3A  
                    u240 7D00                      u161 7E36                      u241 7CFC  
                    u170 7E60                      u250 7D16                      u171 7E5C  
                    u251 7D12                      u307 7FD8                      u180 7E7E  
                    u260 7D3A                      u181 7E7A                      u261 7D36  
                    u317 7FF6                      u190 7E9A                      u191 7E96  
                    u277 7F7E                      u287 7F9C                      u297 7FBA  
           ___awmod@sign 000E                      wreg 0FE8                     l1000 7E7E  
                   l1010 7EAA                     l1002 7E84                     l1004 7E9A  
                   l1012 7EB0                     l1020 7C9C                     l1014 7EC0  
                   l1006 7EA2                     l1030 7CC8                     l1022 7CA0  
                   l1016 7EC8                     l1008 7EA4                     l1040 7D00  
                   l1032 7CD0                     l1024 7CAE                     l1050 7D3A  
                   l1042 7D16                     l1034 7CE2                     l1026 7CB6  
                   l1052 7D42                     l1044 7D1E                     l1036 7CEA  
                   l1028 7CBA                     l1060 7F86                     l1046 7D24  
                   l1038 7CF2                     l1070 7FB4                     l1062 7F92  
                   l1048 7D2A                     l1080 7FEC                     l1072 7FC2  
                   l1064 7F96                     l1056 7ED2                     l1082 7FF0  
                   l1074 7FCE                     l1066 7FA4                     l1058 7F78  
                   l1092 7DB6                     l1076 7FD2                     l1068 7FB0  
                   l1084 7C46                     l1078 7FE0                     l1086 7C4A  
                   _LATB 0F8A                     _LATD 0F8C                     _main 7C46  
                   start 0000             ___param_bank 0000          __end_of_ReadADC 7C9C  
                  ?_main 0001          __end_of___awdiv 7ED2          __end_of___awmod 7D4C  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TRISB 0F93  
                  _TRISD 0F95     __end_of_DISPLAY_7SEG 7E0E                    _Setup 7C56  
        _MOSTRAR_DISPLAY 7ED2                    status 0FD8          __initialization 7C2E  
           __end_of_main 7C56           ReadADC@channel 0005                   ??_main 0010  
          __activetblptr 0002         __end_of_SetupADC 7C46         __end_of_Setupint 7C1E  
                 ?_Setup 0001                   _ADCON0 0FC2                   _ADCON1 0FC1  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
       ___awdiv@dividend 0001                   _OSCCON 0FD3                ??_ReadADC 0003  
              ??___awdiv 0005                ??___awmod 000D         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                   isa$std 0001          ___awmod@counter 000D  
                 _prueba 0010               _Setupports 7C24                   tblptru 0FF8  
__end_of_MOSTRAR_DISPLAY 8000               __accesstop 0060  __end_of__initialization 7C2E  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_Setup 7C68  
                ??_Setup 0001               __pnvCOMRAM 0010             _DISPLAY_7SEG 7D4C  
              ?_SetupADC 0001                ?_Setupint 0001              ?_Setupports 0001  
       ?_MOSTRAR_DISPLAY 0001                  _ReadADC 7C68                  __Hparam 0000  
                __Lparam 0000               ??_SetupADC 0001               ??_Setupint 0001  
                ___awdiv 7E0E                  ___awmod 7C9C                  __pcinit 7C2E  
                __ramtop 0800                  __ptext0 7C46                  __ptext1 7C56  
                __ptext2 7C24                  __ptext3 7C1C                  __ptext4 7C1E  
                __ptext5 7C38                  __ptext6 7ED2                  __ptext7 7C9C  
                __ptext8 7E0E                  __ptext9 7C68         ___awmod@dividend 0009  
   end_of_initialization 7C2E            __Lmediumconst 0000           _SetupOscilador 7C1E  
 __end_of_SetupOscilador 7C24      start_initialization 7C2E          ?_SetupOscilador 0001  
          DISPLAY_7SEG@x 0001             ??_Setupports 0001                 ?_ReadADC 0001  
     __end_of_Setupports 7C2E                 ?___awdiv 0001                 ?___awmod 0009  
               _GO_nDONE 7E11                 __Hrparam 0000                 __Lrparam 0000  
               _SetupADC 7C38                 _Setupint 7C1C         ??_SetupOscilador 0001  
               __ptext10 7D4C            ?_DISPLAY_7SEG 0001                 isa$xinst 0000  
      ??_MOSTRAR_DISPLAY 000F           ??_DISPLAY_7SEG 0003  

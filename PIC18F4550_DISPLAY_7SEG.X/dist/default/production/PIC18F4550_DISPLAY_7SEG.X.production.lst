

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Oct 27 08:51:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _ADRESL	set	4035
    59   000000                     _ADRESH	set	4036
    60                           
    61                           	psect	nvCOMRAM
    62   000010                     __pnvCOMRAM:
    63                           	callstack 0
    64   000010                     _prueba:
    65                           	callstack 0
    66   000010                     	ds	2
    67   000012                     _D4:
    68                           	callstack 0
    69   000012                     	ds	2
    70   000014                     _D3:
    71                           	callstack 0
    72   000014                     	ds	2
    73   000016                     _D2:
    74                           	callstack 0
    75   000016                     	ds	2
    76   000018                     _D1:
    77                           	callstack 0
    78   000018                     	ds	2
    79   000000                     _GO_nDONE	set	32273
    80   000000                     _LATB	set	3978
    81   000000                     _LATD	set	3980
    82   000000                     _TRISB	set	3987
    83   000000                     _TRISD	set	3989
    84   000000                     _ADCON2	set	4032
    85   000000                     _ADCON1	set	4033
    86   000000                     _ADCON0	set	4034
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   007C2E                     __pcinit:
    92                           	callstack 0
    93   007C2E                     start_initialization:
    94                           	callstack 0
    95   007C2E                     __initialization:
    96                           	callstack 0
    97   007C2E                     end_of_initialization:
    98                           	callstack 0
    99   007C2E                     __end_of__initialization:
   100                           	callstack 0
   101   007C2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102   007C30  6EF8               	movwf	tblptru,c
   103   007C32  0100               	movlb	0
   104   007C34  EF23  F03E         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ?_ReadADC:
   110                           	callstack 0
   111   000001                     ?___awdiv:
   112                           	callstack 0
   113   000001                     DISPLAY_7SEG@x:
   114                           	callstack 0
   115   000001                     ___awdiv@dividend:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x0
   119   000001                     	ds	2
   120   000003                     ??_ReadADC:
   121   000003                     ??_DISPLAY_7SEG:
   122   000003                     ___awdiv@divisor:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x2
   126   000003                     	ds	2
   127   000005                     ReadADC@channel:
   128                           	callstack 0
   129   000005                     ___awdiv@counter:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x4
   133   000005                     	ds	1
   134   000006                     ___awdiv@sign:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x5
   138   000006                     	ds	1
   139   000007                     ___awdiv@quotient:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x6
   143   000007                     	ds	2
   144   000009                     ?___awmod:
   145                           	callstack 0
   146   000009                     ___awmod@dividend:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x8
   150   000009                     	ds	2
   151   00000B                     ___awmod@divisor:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0xA
   155   00000B                     	ds	2
   156   00000D                     ___awmod@counter:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0xC
   160   00000D                     	ds	1
   161   00000E                     ___awmod@sign:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0xD
   165   00000E                     	ds	1
   166   00000F                     ??_MOSTRAR_DISPLAY:
   167                           
   168                           ; 1 bytes @ 0xE
   169   00000F                     	ds	1
   170   000010                     
   171                           ; 1 bytes @ 0xF
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 79 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   191 ;;      Params:         0       0       0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called: 2
   197 ;; This function calls:
   198 ;;		_MOSTRAR_DISPLAY
   199 ;;		_Setup
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206   007C46                     __ptext0:
   207                           	callstack 0
   208   007C46                     _main:
   209                           	callstack 29
   210   007C46                     
   211                           ;main.c: 80:     Setup();
   212   007C46  EC2B  F03E         	call	_Setup	;wreg free
   213   007C4A                     l1082:
   214                           
   215                           ;main.c: 82:         MOSTRAR_DISPLAY();
   216   007C4A  EC69  F03F         	call	_MOSTRAR_DISPLAY	;wreg free
   217   007C4E  EF25  F03E         	goto	l1082
   218   007C52  EF00  F000         	goto	start
   219   007C56                     __end_of_main:
   220                           	callstack 0
   221                           
   222 ;; *************** function _Setup *****************
   223 ;; Defined at:
   224 ;;		line 30 in file "Setup.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels used: 1
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_SetupADC
   247 ;;		_SetupOscilador
   248 ;;		_Setupint
   249 ;;		_Setupports
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256   007C56                     __ptext1:
   257                           	callstack 0
   258   007C56                     _Setup:
   259                           	callstack 29
   260   007C56                     
   261                           ;Setup.c: 32:     SetupOscilador();
   262   007C56  EC10  F03E         	call	_SetupOscilador	;wreg free
   263   007C5A                     
   264                           ;Setup.c: 33:     Setupports();
   265   007C5A  EC12  F03E         	call	_Setupports	;wreg free
   266   007C5E                     
   267                           ;Setup.c: 34:     Setupint();
   268   007C5E  EC11  F03E         	call	_Setupint	;wreg free
   269                           
   270                           ;Setup.c: 35:     SetupADC();
   271   007C62  EC1C  F03E         	call	_SetupADC	;wreg free
   272   007C66  0012               	return		;funcret
   273   007C68                     __end_of_Setup:
   274                           	callstack 0
   275                           
   276 ;; *************** function _Setupports *****************
   277 ;; Defined at:
   278 ;;		line 9 in file "Setup.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   292 ;;      Params:         0       0       0       0       0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels used: 1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_Setup
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text2
   306   007C24                     __ptext2:
   307                           	callstack 0
   308   007C24                     _Setupports:
   309                           	callstack 29
   310   007C24                     
   311                           ;Setup.c: 11:     TRISB = 0x00;
   312   007C24  0E00               	movlw	0
   313   007C26  6E93               	movwf	147,c	;volatile
   314                           
   315                           ;Setup.c: 12:     TRISD = 0x00;
   316   007C28  0E00               	movlw	0
   317   007C2A  6E95               	movwf	149,c	;volatile
   318   007C2C  0012               	return		;funcret
   319   007C2E                     __end_of_Setupports:
   320                           	callstack 0
   321                           
   322 ;; *************** function _Setupint *****************
   323 ;; Defined at:
   324 ;;		line 15 in file "Setup.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		None
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_Setup
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text3
   352   007C22                     __ptext3:
   353                           	callstack 0
   354   007C22                     _Setupint:
   355                           	callstack 29
   356   007C22  0012               	return		;funcret
   357   007C24                     __end_of_Setupint:
   358                           	callstack 0
   359                           
   360 ;; *************** function _SetupOscilador *****************
   361 ;; Defined at:
   362 ;;		line 4 in file "Setup.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		None
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_Setup
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text4
   390   007C20                     __ptext4:
   391                           	callstack 0
   392   007C20                     _SetupOscilador:
   393                           	callstack 29
   394   007C20  0012               	return		;funcret
   395   007C22                     __end_of_SetupOscilador:
   396                           	callstack 0
   397                           
   398 ;; *************** function _SetupADC *****************
   399 ;; Defined at:
   400 ;;		line 20 in file "Setup.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         0       0       0       0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_Setup
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text5
   428   007C38                     __ptext5:
   429                           	callstack 0
   430   007C38                     _SetupADC:
   431                           	callstack 29
   432   007C38                     
   433                           ;Setup.c: 23:     ADCON0 = 0b00000001;
   434   007C38  0E01               	movlw	1
   435   007C3A  6EC2               	movwf	194,c	;volatile
   436                           
   437                           ;Setup.c: 24:     ADCON1 = 0b00000000;
   438   007C3C  0E00               	movlw	0
   439   007C3E  6EC1               	movwf	193,c	;volatile
   440                           
   441                           ;Setup.c: 25:     ADCON2 = 0b10001000;
   442   007C40  0E88               	movlw	136
   443   007C42  6EC0               	movwf	192,c	;volatile
   444   007C44  0012               	return		;funcret
   445   007C46                     __end_of_SetupADC:
   446                           	callstack 0
   447                           
   448 ;; *************** function _MOSTRAR_DISPLAY *****************
   449 ;; Defined at:
   450 ;;		line 57 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   464 ;;      Params:         0       0       0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0
   466 ;;      Temps:          1       0       0       0       0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 1
   471 ;; This function calls:
   472 ;;		_DISPLAY_7SEG
   473 ;;		_ReadADC
   474 ;;		___awdiv
   475 ;;		___awmod
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text6
   482   007ED2                     __ptext6:
   483                           	callstack 0
   484   007ED2                     _MOSTRAR_DISPLAY:
   485                           	callstack 29
   486   007ED2                     
   487                           ;main.c: 59:     prueba=ReadADC(0);
   488   007ED2  0E00               	movlw	0
   489   007ED4  EC34  F03E         	call	_ReadADC
   490   007ED8  C001  F010         	movff	?_ReadADC,_prueba
   491   007EDC  C002  F011         	movff	?_ReadADC+1,_prueba+1
   492                           
   493                           ;main.c: 60:     D1 = prueba / 1000;
   494   007EE0  C010  F001         	movff	_prueba,___awdiv@dividend
   495   007EE4  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   496   007EE8  0E03               	movlw	3
   497   007EEA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   498   007EEC  0EE8               	movlw	232
   499   007EEE  6E03               	movwf	___awdiv@divisor^0,c
   500   007EF0  EC07  F03F         	call	___awdiv	;wreg free
   501   007EF4  C001  F018         	movff	?___awdiv,_D1
   502   007EF8  C002  F019         	movff	?___awdiv+1,_D1+1
   503                           
   504                           ;main.c: 61:     D2 = (prueba / 100) % 10;
   505   007EFC  0E00               	movlw	0
   506   007EFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   507   007F00  0E64               	movlw	100
   508   007F02  6E03               	movwf	___awdiv@divisor^0,c
   509   007F04  C010  F001         	movff	_prueba,___awdiv@dividend
   510   007F08  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   511   007F0C  EC07  F03F         	call	___awdiv	;wreg free
   512   007F10  C001  F009         	movff	?___awdiv,___awmod@dividend
   513   007F14  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   514   007F18  0E00               	movlw	0
   515   007F1A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   516   007F1C  0E0A               	movlw	10
   517   007F1E  6E0B               	movwf	___awmod@divisor^0,c
   518   007F20  EC4E  F03E         	call	___awmod	;wreg free
   519   007F24  C009  F016         	movff	?___awmod,_D2
   520   007F28  C00A  F017         	movff	?___awmod+1,_D2+1
   521                           
   522                           ;main.c: 62:     D3 = (prueba / 10) % 10;
   523   007F2C  0E00               	movlw	0
   524   007F2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   525   007F30  0E0A               	movlw	10
   526   007F32  6E03               	movwf	___awdiv@divisor^0,c
   527   007F34  C010  F001         	movff	_prueba,___awdiv@dividend
   528   007F38  C011  F002         	movff	_prueba+1,___awdiv@dividend+1
   529   007F3C  EC07  F03F         	call	___awdiv	;wreg free
   530   007F40  C001  F009         	movff	?___awdiv,___awmod@dividend
   531   007F44  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   532   007F48  0E00               	movlw	0
   533   007F4A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   534   007F4C  0E0A               	movlw	10
   535   007F4E  6E0B               	movwf	___awmod@divisor^0,c
   536   007F50  EC4E  F03E         	call	___awmod	;wreg free
   537   007F54  C009  F014         	movff	?___awmod,_D3
   538   007F58  C00A  F015         	movff	?___awmod+1,_D3+1
   539                           
   540                           ;main.c: 63:     D4 = prueba % 10;
   541   007F5C  C010  F009         	movff	_prueba,___awmod@dividend
   542   007F60  C011  F00A         	movff	_prueba+1,___awmod@dividend+1
   543   007F64  0E00               	movlw	0
   544   007F66  6E0C               	movwf	(___awmod@divisor+1)^0,c
   545   007F68  0E0A               	movlw	10
   546   007F6A  6E0B               	movwf	___awmod@divisor^0,c
   547   007F6C  EC4E  F03E         	call	___awmod	;wreg free
   548   007F70  C009  F012         	movff	?___awmod,_D4
   549   007F74  C00A  F013         	movff	?___awmod+1,_D4+1
   550   007F78                     
   551                           ;main.c: 64:     _delay((unsigned long)((5)*(8000000/4000.0)));
   552   007F78  0E0D               	movlw	13
   553   007F7A  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   554   007F7C  0EFC               	movlw	252
   555   007F7E                     u277:
   556   007F7E  2EE8               	decfsz	wreg,f,c
   557   007F80  D7FE               	bra	u277
   558   007F82  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   559   007F84  D7FC               	bra	u277
   560   007F86                     
   561                           ;main.c: 65:     DISPLAY_7SEG(D1);
   562   007F86  C018  F001         	movff	_D1,DISPLAY_7SEG@x
   563   007F8A  C019  F002         	movff	_D1+1,DISPLAY_7SEG@x+1
   564   007F8E  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   565   007F92                     
   566                           ;main.c: 66:     LATB =0b00001110;
   567   007F92  0E0E               	movlw	14
   568   007F94  6E8A               	movwf	138,c	;volatile
   569   007F96                     
   570                           ;main.c: 67:     _delay((unsigned long)((5)*(8000000/4000.0)));
   571   007F96  0E0D               	movlw	13
   572   007F98  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   573   007F9A  0EFC               	movlw	252
   574   007F9C                     u287:
   575   007F9C  2EE8               	decfsz	wreg,f,c
   576   007F9E  D7FE               	bra	u287
   577   007FA0  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   578   007FA2  D7FC               	bra	u287
   579   007FA4                     
   580                           ;main.c: 68:     DISPLAY_7SEG(D2);
   581   007FA4  C016  F001         	movff	_D2,DISPLAY_7SEG@x
   582   007FA8  C017  F002         	movff	_D2+1,DISPLAY_7SEG@x+1
   583   007FAC  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   584   007FB0                     
   585                           ;main.c: 69:     LATB =0b00001101;
   586   007FB0  0E0D               	movlw	13
   587   007FB2  6E8A               	movwf	138,c	;volatile
   588   007FB4                     
   589                           ;main.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
   590   007FB4  0E0D               	movlw	13
   591   007FB6  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   592   007FB8  0EFC               	movlw	252
   593   007FBA                     u297:
   594   007FBA  2EE8               	decfsz	wreg,f,c
   595   007FBC  D7FE               	bra	u297
   596   007FBE  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   597   007FC0  D7FC               	bra	u297
   598   007FC2                     
   599                           ;main.c: 71:     DISPLAY_7SEG(D3);
   600   007FC2  C014  F001         	movff	_D3,DISPLAY_7SEG@x
   601   007FC6  C015  F002         	movff	_D3+1,DISPLAY_7SEG@x+1
   602   007FCA  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   603   007FCE                     
   604                           ;main.c: 72:     LATB =0b00001011;
   605   007FCE  0E0B               	movlw	11
   606   007FD0  6E8A               	movwf	138,c	;volatile
   607   007FD2                     
   608                           ;main.c: 73:     _delay((unsigned long)((5)*(8000000/4000.0)));
   609   007FD2  0E0D               	movlw	13
   610   007FD4  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   611   007FD6  0EFC               	movlw	252
   612   007FD8                     u307:
   613   007FD8  2EE8               	decfsz	wreg,f,c
   614   007FDA  D7FE               	bra	u307
   615   007FDC  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   616   007FDE  D7FC               	bra	u307
   617   007FE0                     
   618                           ;main.c: 74:     DISPLAY_7SEG(D4);
   619   007FE0  C012  F001         	movff	_D4,DISPLAY_7SEG@x
   620   007FE4  C013  F002         	movff	_D4+1,DISPLAY_7SEG@x+1
   621   007FE8  ECA6  F03E         	call	_DISPLAY_7SEG	;wreg free
   622   007FEC                     
   623                           ;main.c: 75:     LATB =0b00000111;
   624   007FEC  0E07               	movlw	7
   625   007FEE  6E8A               	movwf	138,c	;volatile
   626   007FF0                     
   627                           ;main.c: 76:     _delay((unsigned long)((5)*(8000000/4000.0)));
   628   007FF0  0E0D               	movlw	13
   629   007FF2  6E0F               	movwf	??_MOSTRAR_DISPLAY^0,c
   630   007FF4  0EFC               	movlw	252
   631   007FF6                     u317:
   632   007FF6  2EE8               	decfsz	wreg,f,c
   633   007FF8  D7FE               	bra	u317
   634   007FFA  2E0F               	decfsz	??_MOSTRAR_DISPLAY^0,f,c
   635   007FFC  D7FC               	bra	u317
   636   007FFE  0012               	return		;funcret
   637   008000                     __end_of_MOSTRAR_DISPLAY:
   638                           	callstack 0
   639                           
   640 ;; *************** function ___awmod *****************
   641 ;; Defined at:
   642 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  dividend        2    8[COMRAM] int 
   645 ;;  divisor         2   10[COMRAM] int 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  sign            1   13[COMRAM] unsigned char 
   648 ;;  counter         1   12[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  2    8[COMRAM] int 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         4       0       0       0       0       0       0       0       0
   659 ;;      Locals:         2       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         6       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        6 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_MOSTRAR_DISPLAY
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text7
   672   007C9C                     __ptext7:
   673                           	callstack 0
   674   007C9C                     ___awmod:
   675                           	callstack 29
   676   007C9C  0E00               	movlw	0
   677   007C9E  6E0E               	movwf	___awmod@sign^0,c
   678   007CA0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
   679   007CA2  EF57  F03E         	goto	u210
   680   007CA6  EF55  F03E         	goto	u211
   681   007CAA                     u211:
   682   007CAA  EF5D  F03E         	goto	l1024
   683   007CAE                     u210:
   684   007CAE  6C09               	negf	___awmod@dividend^0,c
   685   007CB0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   686   007CB2  B0D8               	btfsc	status,0,c
   687   007CB4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   688   007CB6  0E01               	movlw	1
   689   007CB8  6E0E               	movwf	___awmod@sign^0,c
   690   007CBA                     l1024:
   691   007CBA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
   692   007CBC  EF64  F03E         	goto	u220
   693   007CC0  EF62  F03E         	goto	u221
   694   007CC4                     u221:
   695   007CC4  EF68  F03E         	goto	l1028
   696   007CC8                     u220:
   697   007CC8  6C0B               	negf	___awmod@divisor^0,c
   698   007CCA  1E0C               	comf	(___awmod@divisor+1)^0,f,c
   699   007CCC  B0D8               	btfsc	status,0,c
   700   007CCE  2A0C               	incf	(___awmod@divisor+1)^0,f,c
   701   007CD0                     l1028:
   702   007CD0  500B               	movf	___awmod@divisor^0,w,c
   703   007CD2  100C               	iorwf	(___awmod@divisor+1)^0,w,c
   704   007CD4  B4D8               	btfsc	status,2,c
   705   007CD6  EF6F  F03E         	goto	u231
   706   007CDA  EF71  F03E         	goto	u230
   707   007CDE                     u231:
   708   007CDE  EF95  F03E         	goto	l1044
   709   007CE2                     u230:
   710   007CE2  0E01               	movlw	1
   711   007CE4  6E0D               	movwf	___awmod@counter^0,c
   712   007CE6  EF79  F03E         	goto	l1034
   713   007CEA                     l1032:
   714   007CEA  90D8               	bcf	status,0,c
   715   007CEC  360B               	rlcf	___awmod@divisor^0,f,c
   716   007CEE  360C               	rlcf	(___awmod@divisor+1)^0,f,c
   717   007CF0  2A0D               	incf	___awmod@counter^0,f,c
   718   007CF2                     l1034:
   719   007CF2  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
   720   007CF4  EF7E  F03E         	goto	u241
   721   007CF8  EF80  F03E         	goto	u240
   722   007CFC                     u241:
   723   007CFC  EF75  F03E         	goto	l1032
   724   007D00                     u240:
   725   007D00                     l1036:
   726   007D00  500B               	movf	___awmod@divisor^0,w,c
   727   007D02  5C09               	subwf	___awmod@dividend^0,w,c
   728   007D04  500C               	movf	(___awmod@divisor+1)^0,w,c
   729   007D06  580A               	subwfb	(___awmod@dividend+1)^0,w,c
   730   007D08  A0D8               	btfss	status,0,c
   731   007D0A  EF89  F03E         	goto	u251
   732   007D0E  EF8B  F03E         	goto	u250
   733   007D12                     u251:
   734   007D12  EF8F  F03E         	goto	l1040
   735   007D16                     u250:
   736   007D16  500B               	movf	___awmod@divisor^0,w,c
   737   007D18  5E09               	subwf	___awmod@dividend^0,f,c
   738   007D1A  500C               	movf	(___awmod@divisor+1)^0,w,c
   739   007D1C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
   740   007D1E                     l1040:
   741   007D1E  90D8               	bcf	status,0,c
   742   007D20  320C               	rrcf	(___awmod@divisor+1)^0,f,c
   743   007D22  320B               	rrcf	___awmod@divisor^0,f,c
   744   007D24  2E0D               	decfsz	___awmod@counter^0,f,c
   745   007D26  EF80  F03E         	goto	l1036
   746   007D2A                     l1044:
   747   007D2A  500E               	movf	___awmod@sign^0,w,c
   748   007D2C  B4D8               	btfsc	status,2,c
   749   007D2E  EF9B  F03E         	goto	u261
   750   007D32  EF9D  F03E         	goto	u260
   751   007D36                     u261:
   752   007D36  EFA1  F03E         	goto	l1048
   753   007D3A                     u260:
   754   007D3A  6C09               	negf	___awmod@dividend^0,c
   755   007D3C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   756   007D3E  B0D8               	btfsc	status,0,c
   757   007D40  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   758   007D42                     l1048:
   759   007D42  C009  F009         	movff	___awmod@dividend,?___awmod
   760   007D46  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   761   007D4A  0012               	return		;funcret
   762   007D4C                     __end_of___awmod:
   763                           	callstack 0
   764                           
   765 ;; *************** function ___awdiv *****************
   766 ;; Defined at:
   767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  dividend        2    0[COMRAM] int 
   770 ;;  divisor         2    2[COMRAM] int 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  quotient        2    6[COMRAM] int 
   773 ;;  sign            1    5[COMRAM] unsigned char 
   774 ;;  counter         1    4[COMRAM] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  2    0[COMRAM] int 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   784 ;;      Params:         4       0       0       0       0       0       0       0       0
   785 ;;      Locals:         4       0       0       0       0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0
   787 ;;      Totals:         8       0       0       0       0       0       0       0       0
   788 ;;Total ram usage:        8 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_MOSTRAR_DISPLAY
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text8
   798   007E0E                     __ptext8:
   799                           	callstack 0
   800   007E0E                     ___awdiv:
   801                           	callstack 29
   802   007E0E  0E00               	movlw	0
   803   007E10  6E06               	movwf	___awdiv@sign^0,c
   804   007E12  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   805   007E14  EF10  F03F         	goto	u150
   806   007E18  EF0E  F03F         	goto	u151
   807   007E1C                     u151:
   808   007E1C  EF16  F03F         	goto	l980
   809   007E20                     u150:
   810   007E20  6C03               	negf	___awdiv@divisor^0,c
   811   007E22  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   812   007E24  B0D8               	btfsc	status,0,c
   813   007E26  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   814   007E28  0E01               	movlw	1
   815   007E2A  6E06               	movwf	___awdiv@sign^0,c
   816   007E2C                     l980:
   817   007E2C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   818   007E2E  EF1D  F03F         	goto	u160
   819   007E32  EF1B  F03F         	goto	u161
   820   007E36                     u161:
   821   007E36  EF23  F03F         	goto	l986
   822   007E3A                     u160:
   823   007E3A  6C01               	negf	___awdiv@dividend^0,c
   824   007E3C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   825   007E3E  B0D8               	btfsc	status,0,c
   826   007E40  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   827   007E42  0E01               	movlw	1
   828   007E44  1A06               	xorwf	___awdiv@sign^0,f,c
   829   007E46                     l986:
   830   007E46  0E00               	movlw	0
   831   007E48  6E08               	movwf	(___awdiv@quotient+1)^0,c
   832   007E4A  0E00               	movlw	0
   833   007E4C  6E07               	movwf	___awdiv@quotient^0,c
   834   007E4E  5003               	movf	___awdiv@divisor^0,w,c
   835   007E50  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   836   007E52  B4D8               	btfsc	status,2,c
   837   007E54  EF2E  F03F         	goto	u171
   838   007E58  EF30  F03F         	goto	u170
   839   007E5C                     u171:
   840   007E5C  EF58  F03F         	goto	l1008
   841   007E60                     u170:
   842   007E60  0E01               	movlw	1
   843   007E62  6E05               	movwf	___awdiv@counter^0,c
   844   007E64  EF38  F03F         	goto	l994
   845   007E68                     l992:
   846   007E68  90D8               	bcf	status,0,c
   847   007E6A  3603               	rlcf	___awdiv@divisor^0,f,c
   848   007E6C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   849   007E6E  2A05               	incf	___awdiv@counter^0,f,c
   850   007E70                     l994:
   851   007E70  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   852   007E72  EF3D  F03F         	goto	u181
   853   007E76  EF3F  F03F         	goto	u180
   854   007E7A                     u181:
   855   007E7A  EF34  F03F         	goto	l992
   856   007E7E                     u180:
   857   007E7E                     l996:
   858   007E7E  90D8               	bcf	status,0,c
   859   007E80  3607               	rlcf	___awdiv@quotient^0,f,c
   860   007E82  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   861   007E84  5003               	movf	___awdiv@divisor^0,w,c
   862   007E86  5C01               	subwf	___awdiv@dividend^0,w,c
   863   007E88  5004               	movf	(___awdiv@divisor+1)^0,w,c
   864   007E8A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   865   007E8C  A0D8               	btfss	status,0,c
   866   007E8E  EF4B  F03F         	goto	u191
   867   007E92  EF4D  F03F         	goto	u190
   868   007E96                     u191:
   869   007E96  EF52  F03F         	goto	l1004
   870   007E9A                     u190:
   871   007E9A  5003               	movf	___awdiv@divisor^0,w,c
   872   007E9C  5E01               	subwf	___awdiv@dividend^0,f,c
   873   007E9E  5004               	movf	(___awdiv@divisor+1)^0,w,c
   874   007EA0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   875   007EA2  8007               	bsf	___awdiv@quotient^0,0,c
   876   007EA4                     l1004:
   877   007EA4  90D8               	bcf	status,0,c
   878   007EA6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   879   007EA8  3203               	rrcf	___awdiv@divisor^0,f,c
   880   007EAA  2E05               	decfsz	___awdiv@counter^0,f,c
   881   007EAC  EF3F  F03F         	goto	l996
   882   007EB0                     l1008:
   883   007EB0  5006               	movf	___awdiv@sign^0,w,c
   884   007EB2  B4D8               	btfsc	status,2,c
   885   007EB4  EF5E  F03F         	goto	u201
   886   007EB8  EF60  F03F         	goto	u200
   887   007EBC                     u201:
   888   007EBC  EF64  F03F         	goto	l1012
   889   007EC0                     u200:
   890   007EC0  6C07               	negf	___awdiv@quotient^0,c
   891   007EC2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   892   007EC4  B0D8               	btfsc	status,0,c
   893   007EC6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   894   007EC8                     l1012:
   895   007EC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
   896   007ECC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   897   007ED0  0012               	return		;funcret
   898   007ED2                     __end_of___awdiv:
   899                           	callstack 0
   900                           
   901 ;; *************** function _ReadADC *****************
   902 ;; Defined at:
   903 ;;		line 12 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  channel         1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  channel         1    4[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  2    0[COMRAM] unsigned int 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         2       0       0       0       0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0       0       0       0       0
   919 ;;      Temps:          2       0       0       0       0       0       0       0       0
   920 ;;      Totals:         5       0       0       0       0       0       0       0       0
   921 ;;Total ram usage:        5 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_MOSTRAR_DISPLAY
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text9
   931   007C68                     __ptext9:
   932                           	callstack 0
   933   007C68                     _ReadADC:
   934                           	callstack 29
   935                           
   936                           ;incstack = 0
   937                           ;ReadADC@channel stored from wreg
   938   007C68  6E05               	movwf	ReadADC@channel^0,c
   939   007C6A                     
   940                           ;main.c: 14:     ADCON0 = (channel << 2) | 0x01;
   941   007C6A  4405               	rlncf	ReadADC@channel^0,w,c
   942   007C6C  46E8               	rlncf	wreg,f,c
   943   007C6E  0BFC               	andlw	252
   944   007C70  0901               	iorlw	1
   945   007C72  6EC2               	movwf	194,c	;volatile
   946   007C74                     
   947                           ;main.c: 15:     GO_nDONE = 1;
   948   007C74  82C2               	bsf	4034,1,c	;volatile
   949   007C76                     l54:
   950   007C76  B2C2               	btfsc	4034,1,c	;volatile
   951   007C78  EF40  F03E         	goto	u141
   952   007C7C  EF42  F03E         	goto	u140
   953   007C80                     u141:
   954   007C80  EF3B  F03E         	goto	l54
   955   007C84                     u140:
   956   007C84                     
   957                           ;main.c: 17:     return ((ADRESH << 8) | ADRESL);
   958   007C84  50C3               	movf	195,w,c	;volatile
   959   007C86  CFC4 F003          	movff	4036,??_ReadADC	;volatile
   960   007C8A  6A04               	clrf	(??_ReadADC+1)^0,c
   961   007C8C  C003  F004         	movff	??_ReadADC,??_ReadADC+1
   962   007C90  6A03               	clrf	??_ReadADC^0,c
   963   007C92  1003               	iorwf	??_ReadADC^0,w,c
   964   007C94  6E01               	movwf	?_ReadADC^0,c
   965   007C96  5004               	movf	(??_ReadADC+1)^0,w,c
   966   007C98  6E02               	movwf	(?_ReadADC+1)^0,c
   967   007C9A  0012               	return		;funcret
   968   007C9C                     __end_of_ReadADC:
   969                           	callstack 0
   970                           
   971 ;; *************** function _DISPLAY_7SEG *****************
   972 ;; Defined at:
   973 ;;		line 20 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  x               2    0[COMRAM] int 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         2       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0
   989 ;;      Temps:          2       0       0       0       0       0       0       0       0
   990 ;;      Totals:         4       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        4 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_MOSTRAR_DISPLAY
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text10
  1001   007D4C                     __ptext10:
  1002                           	callstack 0
  1003   007D4C                     _DISPLAY_7SEG:
  1004                           	callstack 29
  1005   007D4C                     
  1006                           ;main.c: 21:     switch (x) {
  1007   007D4C  EFD0  F03E         	goto	l966
  1008   007D50                     l944:
  1009                           
  1010                           ;main.c: 23:             LATD =0b11000000;
  1011   007D50  0EC0               	movlw	192
  1012   007D52  6E8C               	movwf	140,c	;volatile
  1013                           
  1014                           ;main.c: 24:             break;
  1015   007D54  EF06  F03F         	goto	l73
  1016   007D58                     l946:
  1017                           
  1018                           ;main.c: 26:             LATD =0b11111001;
  1019   007D58  0EF9               	movlw	249
  1020   007D5A  6E8C               	movwf	140,c	;volatile
  1021                           
  1022                           ;main.c: 27:             break;
  1023   007D5C  EF06  F03F         	goto	l73
  1024   007D60                     l948:
  1025                           
  1026                           ;main.c: 29:             LATD =0b10100100;
  1027   007D60  0EA4               	movlw	164
  1028   007D62  6E8C               	movwf	140,c	;volatile
  1029                           
  1030                           ;main.c: 30:             break;
  1031   007D64  EF06  F03F         	goto	l73
  1032   007D68                     l950:
  1033                           
  1034                           ;main.c: 32:             LATD =0b10110000;
  1035   007D68  0EB0               	movlw	176
  1036   007D6A  6E8C               	movwf	140,c	;volatile
  1037                           
  1038                           ;main.c: 33:             break;
  1039   007D6C  EF06  F03F         	goto	l73
  1040   007D70                     l952:
  1041                           
  1042                           ;main.c: 35:             LATD =0b10011001;
  1043   007D70  0E99               	movlw	153
  1044   007D72  6E8C               	movwf	140,c	;volatile
  1045                           
  1046                           ;main.c: 36:             break;
  1047   007D74  EF06  F03F         	goto	l73
  1048   007D78                     l954:
  1049                           
  1050                           ;main.c: 38:             LATD =0b10010010;
  1051   007D78  0E92               	movlw	146
  1052   007D7A  6E8C               	movwf	140,c	;volatile
  1053                           
  1054                           ;main.c: 39:             break;
  1055   007D7C  EF06  F03F         	goto	l73
  1056   007D80                     l956:
  1057                           
  1058                           ;main.c: 41:             LATD =0b10000010;
  1059   007D80  0E82               	movlw	130
  1060   007D82  6E8C               	movwf	140,c	;volatile
  1061                           
  1062                           ;main.c: 42:             break;
  1063   007D84  EF06  F03F         	goto	l73
  1064   007D88                     l958:
  1065                           
  1066                           ;main.c: 44:             LATD =0b11111000;
  1067   007D88  0EF8               	movlw	248
  1068   007D8A  6E8C               	movwf	140,c	;volatile
  1069                           
  1070                           ;main.c: 45:             break;
  1071   007D8C  EF06  F03F         	goto	l73
  1072   007D90                     l960:
  1073                           
  1074                           ;main.c: 47:             LATD =0b10000000;
  1075   007D90  0E80               	movlw	128
  1076   007D92  6E8C               	movwf	140,c	;volatile
  1077                           
  1078                           ;main.c: 48:             break;
  1079   007D94  EF06  F03F         	goto	l73
  1080   007D98                     l962:
  1081                           
  1082                           ;main.c: 50:             LATD =0b10010000;
  1083   007D98  0E90               	movlw	144
  1084   007D9A  6E8C               	movwf	140,c	;volatile
  1085                           
  1086                           ;main.c: 51:             break;
  1087   007D9C  EF06  F03F         	goto	l73
  1088   007DA0                     l966:
  1089   007DA0  C001  F003         	movff	DISPLAY_7SEG@x,??_DISPLAY_7SEG
  1090   007DA4  C002  F004         	movff	DISPLAY_7SEG@x+1,??_DISPLAY_7SEG+1
  1091                           
  1092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1093                           ; Switch size 1, requested type "simple"
  1094                           ; Number of cases is 1, Range of values is 0 to 0
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte            4     3 (average)
  1098                           ;	Chosen strategy is simple_byte
  1099   007DA8  5004               	movf	(??_DISPLAY_7SEG+1)^0,w,c
  1100   007DAA  0A00               	xorlw	0	; case 0
  1101   007DAC  B4D8               	btfsc	status,2,c
  1102   007DAE  EFDB  F03E         	goto	l1088
  1103   007DB2  EF06  F03F         	goto	l73
  1104   007DB6                     l1088:
  1105                           
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 10, Range of values is 0 to 9
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte           31    16 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   007DB6  5003               	movf	??_DISPLAY_7SEG^0,w,c
  1113   007DB8  0A00               	xorlw	0	; case 0
  1114   007DBA  B4D8               	btfsc	status,2,c
  1115   007DBC  EFA8  F03E         	goto	l944
  1116   007DC0  0A01               	xorlw	1	; case 1
  1117   007DC2  B4D8               	btfsc	status,2,c
  1118   007DC4  EFAC  F03E         	goto	l946
  1119   007DC8  0A03               	xorlw	3	; case 2
  1120   007DCA  B4D8               	btfsc	status,2,c
  1121   007DCC  EFB0  F03E         	goto	l948
  1122   007DD0  0A01               	xorlw	1	; case 3
  1123   007DD2  B4D8               	btfsc	status,2,c
  1124   007DD4  EFB4  F03E         	goto	l950
  1125   007DD8  0A07               	xorlw	7	; case 4
  1126   007DDA  B4D8               	btfsc	status,2,c
  1127   007DDC  EFB8  F03E         	goto	l952
  1128   007DE0  0A01               	xorlw	1	; case 5
  1129   007DE2  B4D8               	btfsc	status,2,c
  1130   007DE4  EFBC  F03E         	goto	l954
  1131   007DE8  0A03               	xorlw	3	; case 6
  1132   007DEA  B4D8               	btfsc	status,2,c
  1133   007DEC  EFC0  F03E         	goto	l956
  1134   007DF0  0A01               	xorlw	1	; case 7
  1135   007DF2  B4D8               	btfsc	status,2,c
  1136   007DF4  EFC4  F03E         	goto	l958
  1137   007DF8  0A0F               	xorlw	15	; case 8
  1138   007DFA  B4D8               	btfsc	status,2,c
  1139   007DFC  EFC8  F03E         	goto	l960
  1140   007E00  0A01               	xorlw	1	; case 9
  1141   007E02  B4D8               	btfsc	status,2,c
  1142   007E04  EFCC  F03E         	goto	l962
  1143   007E08  EF06  F03F         	goto	l73
  1144   007E0C                     l73:
  1145   007E0C  0012               	return		;funcret
  1146   007E0E                     __end_of_DISPLAY_7SEG:
  1147                           	callstack 0
  1148   000000                     
  1149                           	psect	rparam
  1150   000000                     
  1151                           	psect	idloc
  1152                           
  1153                           ;Config register IDLOC0 @ 0x200000
  1154                           ;	unspecified, using default values
  1155   200000                     	org	2097152
  1156   200000  FF                 	db	255
  1157                           
  1158                           ;Config register IDLOC1 @ 0x200001
  1159                           ;	unspecified, using default values
  1160   200001                     	org	2097153
  1161   200001  FF                 	db	255
  1162                           
  1163                           ;Config register IDLOC2 @ 0x200002
  1164                           ;	unspecified, using default values
  1165   200002                     	org	2097154
  1166   200002  FF                 	db	255
  1167                           
  1168                           ;Config register IDLOC3 @ 0x200003
  1169                           ;	unspecified, using default values
  1170   200003                     	org	2097155
  1171   200003  FF                 	db	255
  1172                           
  1173                           ;Config register IDLOC4 @ 0x200004
  1174                           ;	unspecified, using default values
  1175   200004                     	org	2097156
  1176   200004  FF                 	db	255
  1177                           
  1178                           ;Config register IDLOC5 @ 0x200005
  1179                           ;	unspecified, using default values
  1180   200005                     	org	2097157
  1181   200005  FF                 	db	255
  1182                           
  1183                           ;Config register IDLOC6 @ 0x200006
  1184                           ;	unspecified, using default values
  1185   200006                     	org	2097158
  1186   200006  FF                 	db	255
  1187                           
  1188                           ;Config register IDLOC7 @ 0x200007
  1189                           ;	unspecified, using default values
  1190   200007                     	org	2097159
  1191   200007  FF                 	db	255
  1192                           
  1193                           	psect	config
  1194                           
  1195                           ;Config register CONFIG1L @ 0x300000
  1196                           ;	PLL Prescaler Selection bits
  1197                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1198                           ;	System Clock Postscaler Selection bits
  1199                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1200                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1201                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1202   300000                     	org	3145728
  1203   300000  00                 	db	0
  1204                           
  1205                           ;Config register CONFIG1H @ 0x300001
  1206                           ;	Oscillator Selection bits
  1207                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1208                           ;	Fail-Safe Clock Monitor Enable bit
  1209                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1210                           ;	Internal/External Oscillator Switchover bit
  1211                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1212   300001                     	org	3145729
  1213   300001  08                 	db	8
  1214                           
  1215                           ;Config register CONFIG2L @ 0x300002
  1216                           ;	Power-up Timer Enable bit
  1217                           ;	PWRT = OFF, PWRT disabled
  1218                           ;	Brown-out Reset Enable bits
  1219                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1220                           ;	Brown-out Reset Voltage bits
  1221                           ;	BORV = 3, Minimum setting 2.05V
  1222                           ;	USB Voltage Regulator Enable bit
  1223                           ;	VREGEN = OFF, USB voltage regulator disabled
  1224   300002                     	org	3145730
  1225   300002  1F                 	db	31
  1226                           
  1227                           ;Config register CONFIG2H @ 0x300003
  1228                           ;	Watchdog Timer Enable bit
  1229                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1230                           ;	Watchdog Timer Postscale Select bits
  1231                           ;	WDTPS = 32768, 1:32768
  1232   300003                     	org	3145731
  1233   300003  1E                 	db	30
  1234                           
  1235                           ; Padding undefined space
  1236   300004                     	org	3145732
  1237   300004  FF                 	db	255
  1238                           
  1239                           ;Config register CONFIG3H @ 0x300005
  1240                           ;	CCP2 MUX bit
  1241                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1242                           ;	PORTB A/D Enable bit
  1243                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1244                           ;	Low-Power Timer 1 Oscillator Enable bit
  1245                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1246                           ;	MCLR Pin Enable bit
  1247                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1248   300005                     	org	3145733
  1249   300005  83                 	db	131
  1250                           
  1251                           ;Config register CONFIG4L @ 0x300006
  1252                           ;	Stack Full/Underflow Reset Enable bit
  1253                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1254                           ;	Single-Supply ICSP Enable bit
  1255                           ;	LVP = OFF, Single-Supply ICSP disabled
  1256                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1257                           ;	ICPRT = OFF, ICPORT disabled
  1258                           ;	Extended Instruction Set Enable bit
  1259                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1260                           ;	Background Debugger Enable bit
  1261                           ;	DEBUG = 0x1, unprogrammed default
  1262   300006                     	org	3145734
  1263   300006  81                 	db	129
  1264                           
  1265                           ; Padding undefined space
  1266   300007                     	org	3145735
  1267   300007  FF                 	db	255
  1268                           
  1269                           ;Config register CONFIG5L @ 0x300008
  1270                           ;	Code Protection bit
  1271                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1272                           ;	Code Protection bit
  1273                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1274                           ;	Code Protection bit
  1275                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1276                           ;	Code Protection bit
  1277                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1278   300008                     	org	3145736
  1279   300008  0F                 	db	15
  1280                           
  1281                           ;Config register CONFIG5H @ 0x300009
  1282                           ;	Boot Block Code Protection bit
  1283                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1284                           ;	Data EEPROM Code Protection bit
  1285                           ;	CPD = OFF, Data EEPROM is not code-protected
  1286   300009                     	org	3145737
  1287   300009  C0                 	db	192
  1288                           
  1289                           ;Config register CONFIG6L @ 0x30000A
  1290                           ;	Write Protection bit
  1291                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1292                           ;	Write Protection bit
  1293                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1294                           ;	Write Protection bit
  1295                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1296                           ;	Write Protection bit
  1297                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1298   30000A                     	org	3145738
  1299   30000A  0F                 	db	15
  1300                           
  1301                           ;Config register CONFIG6H @ 0x30000B
  1302                           ;	Configuration Register Write Protection bit
  1303                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1304                           ;	Boot Block Write Protection bit
  1305                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1306                           ;	Data EEPROM Write Protection bit
  1307                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1308   30000B                     	org	3145739
  1309   30000B  E0                 	db	224
  1310                           
  1311                           ;Config register CONFIG7L @ 0x30000C
  1312                           ;	Table Read Protection bit
  1313                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1314                           ;	Table Read Protection bit
  1315                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1316                           ;	Table Read Protection bit
  1317                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1318                           ;	Table Read Protection bit
  1319                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1320   30000C                     	org	3145740
  1321   30000C  0F                 	db	15
  1322                           
  1323                           ;Config register CONFIG7H @ 0x30000D
  1324                           ;	Boot Block Table Read Protection bit
  1325                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1326   30000D                     	org	3145741
  1327   30000D  40                 	db	64
  1328                           tosu	equ	0xFFF
  1329                           tosh	equ	0xFFE
  1330                           tosl	equ	0xFFD
  1331                           stkptr	equ	0xFFC
  1332                           pclatu	equ	0xFFB
  1333                           pclath	equ	0xFFA
  1334                           pcl	equ	0xFF9
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           indf0	equ	0xFEF
  1342                           postinc0	equ	0xFEE
  1343                           postdec0	equ	0xFED
  1344                           preinc0	equ	0xFEC
  1345                           plusw0	equ	0xFEB
  1346                           fsr0h	equ	0xFEA
  1347                           fsr0l	equ	0xFE9
  1348                           wreg	equ	0xFE8
  1349                           indf1	equ	0xFE7
  1350                           postinc1	equ	0xFE6
  1351                           postdec1	equ	0xFE5
  1352                           preinc1	equ	0xFE4
  1353                           plusw1	equ	0xFE3
  1354                           fsr1h	equ	0xFE2
  1355                           fsr1l	equ	0xFE1
  1356                           bsr	equ	0xFE0
  1357                           indf2	equ	0xFDF
  1358                           postinc2	equ	0xFDE
  1359                           postdec2	equ	0xFDD
  1360                           preinc2	equ	0xFDC
  1361                           plusw2	equ	0xFDB
  1362                           fsr2h	equ	0xFDA
  1363                           fsr2l	equ	0xFD9
  1364                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MOSTRAR_DISPLAY
    _MOSTRAR_DISPLAY->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1856
                    _MOSTRAR_DISPLAY
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                           _SetupADC
                     _SetupOscilador
                           _Setupint
                         _Setupports
 ---------------------------------------------------------------------------------
 (2) _Setupports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Setupint                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetupOscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOSTRAR_DISPLAY                                      1     1      0    1856
                                             14 COMRAM     1     1      0
                       _DISPLAY_7SEG
                            _ReadADC
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_7SEG                                         4     2      2     326
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MOSTRAR_DISPLAY
     _DISPLAY_7SEG
     _ReadADC
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _Setup
     _SetupADC
     _SetupOscilador
     _Setupint
     _Setupports

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F      19       1       26.3%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
DATA                 0      0      19       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhhhh       3B      0       0      21        0.0%
BITBIGSFRhhl        2A      0       0      22        0.0%
BITBIGSFRhl          1      0       0      23        0.0%
BITBIGSFRlh          6      0       0      24        0.0%
BITBIGSFRllh         1      0       0      25        0.0%
BITBIGSFRlll        2A      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Oct 27 08:51:27 2023

                     _D1 0018                       _D2 0016                       _D3 0014  
                     _D4 0012                       l13 7C20                       l22 7C44  
                     l16 7C2C                       l25 7C66                       l19 7C22  
                     l54 7C76                       l73 7E0C                       l57 7C9A  
                     l76 7FFE             ___awdiv@sign 0006                      l331 7D4A  
                    l318 7ED0                      l760 7C20                      l762 7C24  
                    l950 7D68                      l942 7D4C                      l934 7C6A  
                    l766 7C22                      l960 7D90                      l952 7D70  
                    l944 7D50                      l936 7C74                      l768 7C38  
                    l962 7D98                      l954 7D78                      l946 7D58  
                    l938 7C84                      l890 7C56                      l956 7D80  
                    l948 7D60                      l980 7E2C                      l972 7E0E  
                    l892 7C5A                      l958 7D88                      l966 7DA0  
                    l990 7E60                      l982 7E3A                      l974 7E12  
                    l894 7C5E                      l992 7E68                      l984 7E42  
                    l976 7E20                      l994 7E70                      l986 7E46  
                    l978 7E28                      l996 7E7E                      l988 7E4E  
                    l998 7E84                      u200 7EC0                      u201 7EBC  
                    u210 7CAE                      u211 7CAA                      u140 7C84  
                    u220 7CC8                      u141 7C80                      u221 7CC4  
                    u150 7E20                      u230 7CE2                      u151 7E1C  
                    u231 7CDE                      u160 7E3A                      u240 7D00  
                    u161 7E36                      u241 7CFC                      u170 7E60  
                    u250 7D16                      u171 7E5C                      u251 7D12  
                    u307 7FD8                      u180 7E7E                      u260 7D3A  
                    u181 7E7A                      u261 7D36                      u317 7FF6  
                    u190 7E9A                      u191 7E96                      u277 7F7E  
                    u287 7F9C                      u297 7FBA             ___awmod@sign 000E  
                    wreg 0FE8                     l1000 7E9A                     l1010 7EC0  
                   l1002 7EA2                     l1012 7EC8                     l1004 7EA4  
                   l1020 7CAE                     l1006 7EAA                     l1030 7CE2  
                   l1022 7CB6                     l1008 7EB0                     l1040 7D1E  
                   l1032 7CEA                     l1024 7CBA                     l1016 7C9C  
                   l1042 7D24                     l1034 7CF2                     l1026 7CC8  
                   l1018 7CA0                     l1036 7D00                     l1044 7D2A  
                   l1028 7CD0                     l1060 7F96                     l1052 7ED2  
                   l1046 7D3A                     l1038 7D16                     l1070 7FCE  
                   l1062 7FA4                     l1054 7F78                     l1048 7D42  
                   l1072 7FD2                     l1064 7FB0                     l1056 7F86  
                   l1080 7C46                     l1074 7FE0                     l1066 7FB4  
                   l1058 7F92                     l1082 7C4A                     l1076 7FEC  
                   l1068 7FC2                     l1078 7FF0                     l1088 7DB6  
                   _LATB 0F8A                     _LATD 0F8C                     _main 7C46  
                   start 0000             ___param_bank 0000          __end_of_ReadADC 7C9C  
                  ?_main 0001          __end_of___awdiv 7ED2          __end_of___awmod 7D4C  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TRISB 0F93  
                  _TRISD 0F95     __end_of_DISPLAY_7SEG 7E0E                    _Setup 7C56  
        _MOSTRAR_DISPLAY 7ED2                    status 0FD8          __initialization 7C2E  
           __end_of_main 7C56           ReadADC@channel 0005                   ??_main 0010  
          __activetblptr 0002         __end_of_SetupADC 7C46         __end_of_Setupint 7C24  
                 ?_Setup 0001                   _ADCON0 0FC2                   _ADCON1 0FC1  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
       ___awdiv@dividend 0001                ??_ReadADC 0003                ??___awdiv 0005  
              ??___awmod 000D         ___awdiv@quotient 0007          ___awmod@divisor 000B  
                 isa$std 0001          ___awmod@counter 000D                   _prueba 0010  
             _Setupports 7C24                   tblptru 0FF8  __end_of_MOSTRAR_DISPLAY 8000  
             __accesstop 0060  __end_of__initialization 7C2E            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_Setup 7C68                  ??_Setup 0001  
             __pnvCOMRAM 0010             _DISPLAY_7SEG 7D4C                ?_SetupADC 0001  
              ?_Setupint 0001              ?_Setupports 0001         ?_MOSTRAR_DISPLAY 0001  
                _ReadADC 7C68                  __Hparam 0000                  __Lparam 0000  
             ??_SetupADC 0001               ??_Setupint 0001                  ___awdiv 7E0E  
                ___awmod 7C9C                  __pcinit 7C2E                  __ramtop 0800  
                __ptext0 7C46                  __ptext1 7C56                  __ptext2 7C24  
                __ptext3 7C22                  __ptext4 7C20                  __ptext5 7C38  
                __ptext6 7ED2                  __ptext7 7C9C                  __ptext8 7E0E  
                __ptext9 7C68         ___awmod@dividend 0009     end_of_initialization 7C2E  
          __Lmediumconst 0000           _SetupOscilador 7C20   __end_of_SetupOscilador 7C22  
    start_initialization 7C2E          ?_SetupOscilador 0001            DISPLAY_7SEG@x 0001  
           ??_Setupports 0001                 ?_ReadADC 0001       __end_of_Setupports 7C2E  
               ?___awdiv 0001                 ?___awmod 0009                 _GO_nDONE 7E11  
               __Hrparam 0000                 __Lrparam 0000                 _SetupADC 7C38  
               _Setupint 7C22         ??_SetupOscilador 0001                 __ptext10 7D4C  
          ?_DISPLAY_7SEG 0001                 isa$xinst 0000        ??_MOSTRAR_DISPLAY 000F  
         ??_DISPLAY_7SEG 0003  
